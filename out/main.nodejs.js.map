{"version":3,"file":"main.nodejs.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW,GAAG,uBAAuB,GAAG,0BAA0B;AAClE,aAAa,mBAAO,CAAC,gFAAoB;AACzC,gBAAgB,mBAAO,CAAC,gFAAoB;AAC5C,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAkB,kBAAkB,EAMnD;AACT;AACA;AACA,uBAAuB,OAAuB;AAC9C;AACA,kCAAkC,OAAuB;AACzD;AACA;AACA;AACA;AACA,kCAAkC,4EAAQ,SAAS,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iJAAiJ;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,iCAAiC,GAAG,0BAA0B,GAAG,kBAAkB,GAAG,uBAAuB,GAAG,yBAAyB,GAAG,mBAAmB,GAAG,iBAAiB,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,uBAAuB,GAAG,eAAe,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,oCAAoC,GAAG,+BAA+B,GAAG,iCAAiC,GAAG,kBAAkB,GAAG,qBAAqB;AACvjB,qBAAqB;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,iCAAiC,iCAAiC;AACnoCAAoC;AACpyBAAyB,0BAA0B,0BAA0B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mBAAmB,oBAAoB,oBAAoB;AAC5D;AACA;AACA;AACA;AACA,CAAC,cAAc,eAAe,eAAe;AAC7C;AACA;AACA;AACA;AACA,CAAC,sBAAsB,uBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qBAAqB,sBAAsB,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B,2BAA2B,2BAA2B;AACjF;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB,iBAAiB,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB,mBAAmB,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;AACA;AACA;AACA;AACA,CAAC,sBAAsB,uBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iBAAiB,kBAAkB,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yBAAyB,0BAA0B,0BAA0B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,iCAAiC,iCAAiC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uBAAuB,wBAAwB,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;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","sources":["../node_modules/@scrypted/sdk/dist/src/index.js","../node_modules/@scrypted/sdk/dist/src|sync","../node_modules/@scrypted/sdk/dist/types/gen/index.js","../external node-commonjs \"child_process\"","../external node-commonjs \"fs\"","../external node-commonjs \"http\"","../external node-commonjs \"module\"","../external node-commonjs \"os\"","../external node-commonjs \"path\"","../external node-commonjs \"stream\"","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../src/main.ts"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdk = exports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\nconst module_1 = require(\"module\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = exports.sdk.deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = exports.sdk.deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = exports.sdk.deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        this.nativeId = exports.sdk.systemManager.getDeviceById(this.id).nativeId;\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be discouraged and warned at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && typeof this._deviceState.id === 'string') {\n            this._deviceState = exports.sdk.deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = exports.sdk.deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (exports.sdk.deviceManager.getMixinConsole)\n                this._console = exports.sdk.deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = exports.sdk.deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            if (!this._deviceState) {\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            }\n            else {\n                // @ts-ignore: accessing private property\n                this._deviceState[state] = value;\n            }\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nexports.sdk = {};\ntry {\n    let loaded = false;\n    try {\n        // todo: remove usage of process.env.SCRYPTED_SDK_MODULE, only existed in prerelease builds.\n        // import.meta is not a reliable way to detect es module support in webpack since webpack\n        // evaluates that to true at runtime.\n        const esModule = process.env.SCRYPTED_SDK_ES_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        const cjsModule = process.env.SCRYPTED_SDK_CJS_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        // @ts-expect-error\n        if (esModule && typeof import.meta !== 'undefined') {\n            // @ts-expect-error\n            const require = (0, module_1.createRequire)(import.meta.url);\n            const sdkModule = require(esModule);\n            Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n            loaded = true;\n        }\n        else if (cjsModule) {\n            // @ts-expect-error\n            if (typeof __non_webpack_require__ !== 'undefined') {\n                // @ts-expect-error\n                const sdkModule = __non_webpack_require__(process.env.SCRYPTED_SDK_MODULE);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n            else {\n                const sdkModule = require(cjsModule);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n        }\n    }\n    catch (e) {\n        console.warn(\"failed to load sdk module\", e);\n        throw e;\n    }\n    if (!loaded) {\n        let runtimeAPI;\n        try {\n            runtimeAPI = pluginRuntimeAPI;\n        }\n        catch (e) {\n        }\n        Object.assign(exports.sdk, {\n            log: deviceManager.getDeviceLogger(undefined),\n            deviceManager,\n            endpointManager,\n            mediaManager,\n            systemManager,\n            pluginHostAPI,\n            ...runtimeAPI,\n        });\n    }\n    try {\n        exports.sdk.systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = exports.sdk;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@scrypted/sdk/dist/src sync recursive\";\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.AirPurifierMode = exports.AirPurifierStatus = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.3.107\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"scryptedRuntimeArguments\"] = \"scryptedRuntimeArguments\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"buttons\"] = \"buttons\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"audioVolumes\"] = \"audioVolumes\";\n    ScryptedInterfaceProperty[\"recordingActive\"] = \"recordingActive\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"converters\"] = \"converters\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"sleeping\"] = \"sleeping\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"airPurifierState\"] = \"airPurifierState\";\n    ScryptedInterfaceProperty[\"filterChangeIndication\"] = \"filterChangeIndication\";\n    ScryptedInterfaceProperty[\"filterLifeLevel\"] = \"filterLifeLevel\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n    ScryptedInterfaceProperty[\"systemDevice\"] = \"systemDevice\";\n})(ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"pressButton\"] = \"pressButton\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"setAudioVolumes\"] = \"setAudioVolumes\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getPrivacyMasks\"] = \"getPrivacyMasks\";\n    ScryptedInterfaceMethod[\"setPrivacyMasks\"] = \"setPrivacyMasks\";\n    ScryptedInterfaceMethod[\"getVideoTextOverlays\"] = \"getVideoTextOverlays\";\n    ScryptedInterfaceMethod[\"setVideoTextOverlay\"] = \"setVideoTextOverlay\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"deleteRecordingStream\"] = \"deleteRecordingStream\";\n    ScryptedInterfaceMethod[\"setRecordingActive\"] = \"setRecordingActive\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"reboot\"] = \"reboot\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"convertMedia\"] = \"convertMedia\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"setAirPurifierState\"] = \"setAirPurifierState\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"forkInterface\"] = \"forkInterface\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n    ScryptedInterfaceMethod[\"connectStream\"] = \"connectStream\";\n    ScryptedInterfaceMethod[\"getTTYSettings\"] = \"getTTYSettings\";\n})(ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    \"ScryptedDevice\": {\n        \"name\": \"ScryptedDevice\",\n        \"methods\": [\n            \"listen\",\n            \"probe\",\n            \"setMixins\",\n            \"setName\",\n            \"setRoom\",\n            \"setType\"\n        ],\n        \"properties\": [\n            \"id\",\n            \"info\",\n            \"interfaces\",\n            \"mixins\",\n            \"name\",\n            \"nativeId\",\n            \"pluginId\",\n            \"providedInterfaces\",\n            \"providedName\",\n            \"providedRoom\",\n            \"providedType\",\n            \"providerId\",\n            \"room\",\n            \"type\"\n        ]\n    },\n    \"ScryptedPlugin\": {\n        \"name\": \"ScryptedPlugin\",\n        \"methods\": [\n            \"getPluginJson\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedPluginRuntime\": {\n        \"name\": \"ScryptedPluginRuntime\",\n        \"methods\": [],\n        \"properties\": [\n            \"scryptedRuntimeArguments\"\n        ]\n    },\n    \"OnOff\": {\n        \"name\": \"OnOff\",\n        \"methods\": [\n            \"turnOff\",\n            \"turnOn\"\n        ],\n        \"properties\": [\n            \"on\"\n        ]\n    },\n    \"Brightness\": {\n        \"name\": \"Brightness\",\n        \"methods\": [\n            \"setBrightness\"\n        ],\n        \"properties\": [\n            \"brightness\"\n        ]\n    },\n    \"ColorSettingTemperature\": {\n        \"name\": \"ColorSettingTemperature\",\n        \"methods\": [\n            \"getTemperatureMaxK\",\n            \"getTemperatureMinK\",\n            \"setColorTemperature\"\n        ],\n        \"properties\": [\n            \"colorTemperature\"\n        ]\n    },\n    \"ColorSettingRgb\": {\n        \"name\": \"ColorSettingRgb\",\n        \"methods\": [\n            \"setRgb\"\n        ],\n        \"properties\": [\n            \"rgb\"\n        ]\n    },\n    \"ColorSettingHsv\": {\n        \"name\": \"ColorSettingHsv\",\n        \"methods\": [\n            \"setHsv\"\n        ],\n        \"properties\": [\n            \"hsv\"\n        ]\n    },\n    \"Buttons\": {\n        \"name\": \"Buttons\",\n        \"methods\": [],\n        \"properties\": [\n            \"buttons\"\n        ]\n    },\n    \"PressButtons\": {\n        \"name\": \"PressButtons\",\n        \"methods\": [\n            \"pressButton\"\n        ],\n        \"properties\": []\n    },\n    \"Notifier\": {\n        \"name\": \"Notifier\",\n        \"methods\": [\n            \"sendNotification\"\n        ],\n        \"properties\": []\n    },\n    \"StartStop\": {\n        \"name\": \"StartStop\",\n        \"methods\": [\n            \"start\",\n            \"stop\"\n        ],\n        \"properties\": [\n            \"running\"\n        ]\n    },\n    \"Pause\": {\n        \"name\": \"Pause\",\n        \"methods\": [\n            \"pause\",\n            \"resume\"\n        ],\n        \"properties\": [\n            \"paused\"\n        ]\n    },\n    \"Dock\": {\n        \"name\": \"Dock\",\n        \"methods\": [\n            \"dock\"\n        ],\n        \"properties\": [\n            \"docked\"\n        ]\n    },\n    \"TemperatureSetting\": {\n        \"name\": \"TemperatureSetting\",\n        \"methods\": [\n            \"setTemperature\"\n        ],\n        \"properties\": [\n            \"temperatureSetting\"\n        ]\n    },\n    \"Thermometer\": {\n        \"name\": \"Thermometer\",\n        \"methods\": [\n            \"setTemperatureUnit\"\n        ],\n        \"properties\": [\n            \"temperature\",\n            \"temperatureUnit\"\n        ]\n    },\n    \"HumiditySensor\": {\n        \"name\": \"HumiditySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"humidity\"\n        ]\n    },\n    \"Camera\": {\n        \"name\": \"Camera\",\n        \"methods\": [\n            \"getPictureOptions\",\n            \"takePicture\"\n        ],\n        \"properties\": []\n    },\n    \"Microphone\": {\n        \"name\": \"Microphone\",\n        \"methods\": [\n            \"getAudioStream\"\n        ],\n        \"properties\": []\n    },\n    \"AudioVolumeControl\": {\n        \"name\": \"AudioVolumeControl\",\n        \"methods\": [\n            \"setAudioVolumes\"\n        ],\n        \"properties\": [\n            \"audioVolumes\"\n        ]\n    },\n    \"Display\": {\n        \"name\": \"Display\",\n        \"methods\": [\n            \"startDisplay\",\n            \"stopDisplay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCamera\": {\n        \"name\": \"VideoCamera\",\n        \"methods\": [\n            \"getVideoStream\",\n            \"getVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraMask\": {\n        \"name\": \"VideoCameraMask\",\n        \"methods\": [\n            \"getPrivacyMasks\",\n            \"setPrivacyMasks\"\n        ],\n        \"properties\": []\n    },\n    \"VideoTextOverlays\": {\n        \"name\": \"VideoTextOverlays\",\n        \"methods\": [\n            \"getVideoTextOverlays\",\n            \"setVideoTextOverlay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoRecorder\": {\n        \"name\": \"VideoRecorder\",\n        \"methods\": [\n            \"getRecordingStream\",\n            \"getRecordingStreamCurrentTime\",\n            \"getRecordingStreamOptions\",\n            \"getRecordingStreamThumbnail\"\n        ],\n        \"properties\": [\n            \"recordingActive\"\n        ]\n    },\n    \"VideoRecorderManagement\": {\n        \"name\": \"VideoRecorderManagement\",\n        \"methods\": [\n            \"deleteRecordingStream\",\n            \"setRecordingActive\"\n        ],\n        \"properties\": []\n    },\n    \"PanTiltZoom\": {\n        \"name\": \"PanTiltZoom\",\n        \"methods\": [\n            \"ptzCommand\"\n        ],\n        \"properties\": [\n            \"ptzCapabilities\"\n        ]\n    },\n    \"EventRecorder\": {\n        \"name\": \"EventRecorder\",\n        \"methods\": [\n            \"getRecordedEvents\"\n        ],\n        \"properties\": []\n    },\n    \"VideoClips\": {\n        \"name\": \"VideoClips\",\n        \"methods\": [\n            \"getVideoClip\",\n            \"getVideoClips\",\n            \"getVideoClipThumbnail\",\n            \"removeVideoClips\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraConfiguration\": {\n        \"name\": \"VideoCameraConfiguration\",\n        \"methods\": [\n            \"setVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"Intercom\": {\n        \"name\": \"Intercom\",\n        \"methods\": [\n            \"startIntercom\",\n            \"stopIntercom\"\n        ],\n        \"properties\": []\n    },\n    \"Lock\": {\n        \"name\": \"Lock\",\n        \"methods\": [\n            \"lock\",\n            \"unlock\"\n        ],\n        \"properties\": [\n            \"lockState\"\n        ]\n    },\n    \"PasswordStore\": {\n        \"name\": \"PasswordStore\",\n        \"methods\": [\n            \"addPassword\",\n            \"getPasswords\",\n            \"removePassword\"\n        ],\n        \"properties\": []\n    },\n    \"Scene\": {\n        \"name\": \"Scene\",\n        \"methods\": [\n            \"activate\",\n            \"deactivate\",\n            \"isReversible\"\n        ],\n        \"properties\": []\n    },\n    \"Entry\": {\n        \"name\": \"Entry\",\n        \"methods\": [\n            \"closeEntry\",\n            \"openEntry\"\n        ],\n        \"properties\": []\n    },\n    \"EntrySensor\": {\n        \"name\": \"EntrySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"entryOpen\"\n        ]\n    },\n    \"DeviceProvider\": {\n        \"name\": \"DeviceProvider\",\n        \"methods\": [\n            \"getDevice\",\n            \"releaseDevice\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceDiscovery\": {\n        \"name\": \"DeviceDiscovery\",\n        \"methods\": [\n            \"adoptDevice\",\n            \"discoverDevices\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceCreator\": {\n        \"name\": \"DeviceCreator\",\n        \"methods\": [\n            \"createDevice\",\n            \"getCreateDeviceSettings\"\n        ],\n        \"properties\": []\n    },\n    \"Battery\": {\n        \"name\": \"Battery\",\n        \"methods\": [],\n        \"properties\": [\n            \"batteryLevel\"\n        ]\n    },\n    \"Charger\": {\n        \"name\": \"Charger\",\n        \"methods\": [],\n        \"properties\": [\n            \"chargeState\"\n        ]\n    },\n    \"Reboot\": {\n        \"name\": \"Reboot\",\n        \"methods\": [\n            \"reboot\"\n        ],\n        \"properties\": []\n    },\n    \"Refresh\": {\n        \"name\": \"Refresh\",\n        \"methods\": [\n            \"getRefreshFrequency\",\n            \"refresh\"\n        ],\n        \"properties\": []\n    },\n    \"MediaPlayer\": {\n        \"name\": \"MediaPlayer\",\n        \"methods\": [\n            \"getMediaStatus\",\n            \"load\",\n            \"seek\",\n            \"skipNext\",\n            \"skipPrevious\"\n        ],\n        \"properties\": []\n    },\n    \"Online\": {\n        \"name\": \"Online\",\n        \"methods\": [],\n        \"properties\": [\n            \"online\"\n        ]\n    },\n    \"BufferConverter\": {\n        \"name\": \"BufferConverter\",\n        \"methods\": [\n            \"convert\"\n        ],\n        \"properties\": [\n            \"fromMimeType\",\n            \"toMimeType\"\n        ]\n    },\n    \"MediaConverter\": {\n        \"name\": \"MediaConverter\",\n        \"methods\": [\n            \"convertMedia\"\n        ],\n        \"properties\": [\n            \"converters\"\n        ]\n    },\n    \"Settings\": {\n        \"name\": \"Settings\",\n        \"methods\": [\n            \"getSettings\",\n            \"putSetting\"\n        ],\n        \"properties\": []\n    },\n    \"BinarySensor\": {\n        \"name\": \"BinarySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"binaryState\"\n        ]\n    },\n    \"TamperSensor\": {\n        \"name\": \"TamperSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"tampered\"\n        ]\n    },\n    \"Sleep\": {\n        \"name\": \"Sleep\",\n        \"methods\": [],\n        \"properties\": [\n            \"sleeping\"\n        ]\n    },\n    \"PowerSensor\": {\n        \"name\": \"PowerSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"powerDetected\"\n        ]\n    },\n    \"AudioSensor\": {\n        \"name\": \"AudioSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"audioDetected\"\n        ]\n    },\n    \"MotionSensor\": {\n        \"name\": \"MotionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"motionDetected\"\n        ]\n    },\n    \"AmbientLightSensor\": {\n        \"name\": \"AmbientLightSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ambientLight\"\n        ]\n    },\n    \"OccupancySensor\": {\n        \"name\": \"OccupancySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"occupied\"\n        ]\n    },\n    \"FloodSensor\": {\n        \"name\": \"FloodSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"flooded\"\n        ]\n    },\n    \"UltravioletSensor\": {\n        \"name\": \"UltravioletSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ultraviolet\"\n        ]\n    },\n    \"LuminanceSensor\": {\n        \"name\": \"LuminanceSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"luminance\"\n        ]\n    },\n    \"PositionSensor\": {\n        \"name\": \"PositionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"position\"\n        ]\n    },\n    \"SecuritySystem\": {\n        \"name\": \"SecuritySystem\",\n        \"methods\": [\n            \"armSecuritySystem\",\n            \"disarmSecuritySystem\"\n        ],\n        \"properties\": [\n            \"securitySystemState\"\n        ]\n    },\n    \"PM10Sensor\": {\n        \"name\": \"PM10Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm10Density\"\n        ]\n    },\n    \"PM25Sensor\": {\n        \"name\": \"PM25Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm25Density\"\n        ]\n    },\n    \"VOCSensor\": {\n        \"name\": \"VOCSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"vocDensity\"\n        ]\n    },\n    \"NOXSensor\": {\n        \"name\": \"NOXSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"noxDensity\"\n        ]\n    },\n    \"CO2Sensor\": {\n        \"name\": \"CO2Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"co2ppm\"\n        ]\n    },\n    \"AirQualitySensor\": {\n        \"name\": \"AirQualitySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"airQuality\"\n        ]\n    },\n    \"AirPurifier\": {\n        \"name\": \"AirPurifier\",\n        \"methods\": [\n            \"setAirPurifierState\"\n        ],\n        \"properties\": [\n            \"airPurifierState\"\n        ]\n    },\n    \"FilterMaintenance\": {\n        \"name\": \"FilterMaintenance\",\n        \"methods\": [],\n        \"properties\": [\n            \"filterChangeIndication\",\n            \"filterLifeLevel\"\n        ]\n    },\n    \"Readme\": {\n        \"name\": \"Readme\",\n        \"methods\": [\n            \"getReadmeMarkdown\"\n        ],\n        \"properties\": []\n    },\n    \"OauthClient\": {\n        \"name\": \"OauthClient\",\n        \"methods\": [\n            \"getOauthUrl\",\n            \"onOauthCallback\"\n        ],\n        \"properties\": []\n    },\n    \"MixinProvider\": {\n        \"name\": \"MixinProvider\",\n        \"methods\": [\n            \"canMixin\",\n            \"getMixin\",\n            \"releaseMixin\"\n        ],\n        \"properties\": []\n    },\n    \"HttpRequestHandler\": {\n        \"name\": \"HttpRequestHandler\",\n        \"methods\": [\n            \"onRequest\"\n        ],\n        \"properties\": []\n    },\n    \"EngineIOHandler\": {\n        \"name\": \"EngineIOHandler\",\n        \"methods\": [\n            \"onConnection\"\n        ],\n        \"properties\": []\n    },\n    \"PushHandler\": {\n        \"name\": \"PushHandler\",\n        \"methods\": [\n            \"onPush\"\n        ],\n        \"properties\": []\n    },\n    \"Program\": {\n        \"name\": \"Program\",\n        \"methods\": [\n            \"run\"\n        ],\n        \"properties\": []\n    },\n    \"Scriptable\": {\n        \"name\": \"Scriptable\",\n        \"methods\": [\n            \"eval\",\n            \"loadScripts\",\n            \"saveScript\"\n        ],\n        \"properties\": []\n    },\n    \"ClusterForkInterface\": {\n        \"name\": \"ClusterForkInterface\",\n        \"methods\": [\n            \"forkInterface\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectTracker\": {\n        \"name\": \"ObjectTracker\",\n        \"methods\": [\n            \"trackObjects\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetector\": {\n        \"name\": \"ObjectDetector\",\n        \"methods\": [\n            \"getDetectionInput\",\n            \"getObjectTypes\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetection\": {\n        \"name\": \"ObjectDetection\",\n        \"methods\": [\n            \"detectObjects\",\n            \"generateObjectDetections\",\n            \"getDetectionModel\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetectionPreview\": {\n        \"name\": \"ObjectDetectionPreview\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ObjectDetectionGenerator\": {\n        \"name\": \"ObjectDetectionGenerator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"HumiditySetting\": {\n        \"name\": \"HumiditySetting\",\n        \"methods\": [\n            \"setHumidity\"\n        ],\n        \"properties\": [\n            \"humiditySetting\"\n        ]\n    },\n    \"Fan\": {\n        \"name\": \"Fan\",\n        \"methods\": [\n            \"setFan\"\n        ],\n        \"properties\": [\n            \"fan\"\n        ]\n    },\n    \"RTCSignalingChannel\": {\n        \"name\": \"RTCSignalingChannel\",\n        \"methods\": [\n            \"startRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"RTCSignalingClient\": {\n        \"name\": \"RTCSignalingClient\",\n        \"methods\": [\n            \"createRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"LauncherApplication\": {\n        \"name\": \"LauncherApplication\",\n        \"methods\": [],\n        \"properties\": [\n            \"applicationInfo\"\n        ]\n    },\n    \"ScryptedUser\": {\n        \"name\": \"ScryptedUser\",\n        \"methods\": [\n            \"getScryptedUserAccessControl\"\n        ],\n        \"properties\": []\n    },\n    \"VideoFrameGenerator\": {\n        \"name\": \"VideoFrameGenerator\",\n        \"methods\": [\n            \"generateVideoFrames\"\n        ],\n        \"properties\": []\n    },\n    \"StreamService\": {\n        \"name\": \"StreamService\",\n        \"methods\": [\n            \"connectStream\"\n        ],\n        \"properties\": []\n    },\n    \"TTY\": {\n        \"name\": \"TTY\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"TTYSettings\": {\n        \"name\": \"TTYSettings\",\n        \"methods\": [\n            \"getTTYSettings\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedSystemDevice\": {\n        \"name\": \"ScryptedSystemDevice\",\n        \"methods\": [],\n        \"properties\": [\n            \"systemDevice\"\n        ]\n    },\n    \"ScryptedDeviceCreator\": {\n        \"name\": \"ScryptedDeviceCreator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ScryptedSettings\": {\n        \"name\": \"ScryptedSettings\",\n        \"methods\": [],\n        \"properties\": []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType || (exports.ScryptedDeviceType = ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode || (exports.HumidityMode = HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode || (exports.FanMode = FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit || (exports.TemperatureUnit = TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode || (exports.ThermostatMode = ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n    PanTiltZoomMovement[\"Continuous\"] = \"Continuous\";\n    PanTiltZoomMovement[\"Preset\"] = \"Preset\";\n    PanTiltZoomMovement[\"Home\"] = \"Home\";\n})(PanTiltZoomMovement || (exports.PanTiltZoomMovement = PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState || (exports.LockState = LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState || (exports.ChargeState = ChargeState = {}));\nvar AirPurifierStatus;\n(function (AirPurifierStatus) {\n    AirPurifierStatus[\"Inactive\"] = \"Inactive\";\n    AirPurifierStatus[\"Idle\"] = \"Idle\";\n    AirPurifierStatus[\"Active\"] = \"Active\";\n    AirPurifierStatus[\"ActiveNightMode\"] = \"ActiveNightMode\";\n})(AirPurifierStatus || (exports.AirPurifierStatus = AirPurifierStatus = {}));\nvar AirPurifierMode;\n(function (AirPurifierMode) {\n    AirPurifierMode[\"Manual\"] = \"Manual\";\n    AirPurifierMode[\"Automatic\"] = \"Automatic\";\n})(AirPurifierMode || (exports.AirPurifierMode = AirPurifierMode = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality || (exports.AirQuality = AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode || (exports.SecuritySystemMode = SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction || (exports.SecuritySystemObstruction = SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState || (exports.MediaPlayerState = MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"ScryptedPluginRuntime\"] = \"ScryptedPluginRuntime\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Buttons\"] = \"Buttons\";\n    ScryptedInterface[\"PressButtons\"] = \"PressButtons\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"AudioVolumeControl\"] = \"AudioVolumeControl\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoCameraMask\"] = \"VideoCameraMask\";\n    ScryptedInterface[\"VideoTextOverlays\"] = \"VideoTextOverlays\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"VideoRecorderManagement\"] = \"VideoRecorderManagement\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Reboot\"] = \"Reboot\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"MediaConverter\"] = \"MediaConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"Sleep\"] = \"Sleep\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedInterface[\"FilterMaintenance\"] = \"FilterMaintenance\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ClusterForkInterface\"] = \"ClusterForkInterface\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"ObjectDetectionPreview\"] = \"ObjectDetectionPreview\";\n    ScryptedInterface[\"ObjectDetectionGenerator\"] = \"ObjectDetectionGenerator\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n    ScryptedInterface[\"StreamService\"] = \"StreamService\";\n    ScryptedInterface[\"TTY\"] = \"TTY\";\n    ScryptedInterface[\"TTYSettings\"] = \"TTYSettings\";\n    ScryptedInterface[\"ScryptedSystemDevice\"] = \"ScryptedSystemDevice\";\n    ScryptedInterface[\"ScryptedDeviceCreator\"] = \"ScryptedDeviceCreator\";\n    ScryptedInterface[\"ScryptedSettings\"] = \"ScryptedSettings\";\n})(ScryptedInterface || (exports.ScryptedInterface = ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"ServerId\"] = \"text/x-server-id\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes || (exports.ScryptedMimeTypes = ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"module\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n    ScryptedDeviceBase,\n    DeviceProvider,\n    DeviceCreator,\n    Device,\n    ScryptedInterface,\n    Setting,\n    Settings,\n    MediaManager,\n    DeviceManager,\n    ScryptedDeviceType,\n    ScryptedNativeId,\n    DeviceCreatorSettings,\n    sdk\n} from '@scrypted/sdk';\nimport { spawn, type ChildProcessWithoutNullStreams } from 'child_process';\nimport { PassThrough } from 'stream';\nimport { join } from 'path';\nimport { readFileSync } from 'fs';\nimport http from 'http';\n\nclass BirdNETPlugin extends ScryptedDeviceBase implements DeviceProvider, DeviceCreator {\n    devices: Map<string, any> = new Map();\n    mediaManager: MediaManager;\n    deviceManager: DeviceManager;\n\n    // Process references for managing child processes\n    birdnetProcess: ChildProcessWithoutNullStreams | null = null;\n    audioStream: PassThrough | null = null;\n    ffmpegAudioProcess: ChildProcessWithoutNullStreams | null = null;\n\n    // Plugin settings\n    settings: { [key: string]: any } = {};\n\n    // TTY output storage\n    ttyOutput: string = \"\";\n\n    constructor(nativeId?: string) {\n        super(nativeId);\n        this.mediaManager = sdk.mediaManager;\n        this.deviceManager = sdk.deviceManager;\n        \n        this.loadSettings();\n        this.startBirdNET();\n    }\n\n    loadSettings() {\n        this.settings.mode = this.storage.getItem('mode') || 'self-contained';\n        this.settings.birdnetUIURL = this.storage.getItem('birdnetUIURL') || 'http://birdnet.local:8080';\n        this.settings.audioSource = this.storage.getItem('audioSource') || 'mic';\n        this.settings.rtspAudioURL = this.storage.getItem('rtspAudioURL') || '';\n        this.settings.birdnetThreshold = parseFloat(this.storage.getItem('birdnetThreshold') || '0.7');\n    }\n\n    async startBirdNET() {\n        try {\n            if (this.settings.mode === 'external') {\n                if (this.settings.audioSource === 'rtsp') {\n                    this.audioStream = new PassThrough();\n                    this.startAudioCapture();\n                }\n                this.console.log('Starting external BirdNET-Go...');\n                try {\n                    await new Promise((resolve, reject) => {\n                        const proc = spawn('which', ['birdnet-go']);\n                        proc.on('exit', (code) => code === 0 ? resolve(null) : reject());\n                    });\n                } catch (e) {\n                    throw new Error('BirdNET-Go not found. Please install BirdNET-Go first.');\n                }\n                this.birdnetProcess = spawn('birdnet-go', [\n                    'realtime',\n                    '--threshold', this.settings.birdnetThreshold.toString(),\n                    '--locale', 'en',\n                    ...(this.settings.audioSource === 'rtsp' ? ['--audio-stdin'] : [])\n                ]);\n                if (this.settings.audioSource === 'rtsp' && this.audioStream) {\n                    this.audioStream.pipe(this.birdnetProcess.stdin);\n                }\n                this.birdnetProcess.stdout.on('data', (data) => {\n                    const text = data.toString();\n                    this.updateTTYDisplayFromExternal(text);\n                });\n                this.birdnetProcess.stderr.on('data', (data) => {\n                    this.console.error(data.toString());\n                });\n                this.birdnetProcess.on('exit', (code) => {\n                    this.console.log(`BirdNET-Go exited with code ${code}`);\n                });\n            } else if (this.settings.mode === 'self-contained') {\n                this.console.log('Initializing self-contained BirdNET analysis');\n                if (this.settings.audioSource === 'rtsp') {\n                    this.audioStream = new PassThrough();\n                    this.startAudioCapture();\n                }\n                this.processSelfContainedAudio();\n            }\n        } catch (err) {\n            this.console.error('Error in startBirdNET:', err);\n        }\n    }\n\n    processSelfContainedAudio() {\n        const bufferChunks: Buffer[] = [];\n        if (this.audioStream) {\n            this.audioStream.on('data', async (chunk: Buffer) => {\n                bufferChunks.push(chunk);\n                // Assuming mono 16-bit PCM at 48000 Hz, 1 second ~ 48000 samples * 2 bytes/sample\n                const THRESHOLD = 48000 * 2;\n                const totalLength = bufferChunks.reduce((sum, buf) => sum + buf.length, 0);\n                if (totalLength >= THRESHOLD) {\n                    const buffer = Buffer.concat(bufferChunks);\n                    bufferChunks.length = 0;\n                    const samples = new Float32Array(buffer.length / 2);\n                    for (let i = 0; i < samples.length; i++) {\n                        samples[i] = buffer.readInt16LE(i * 2) / 32768;\n                    }\n                    try {\n                        const predictions = await this.analyzeAudioChunk(samples);\n                        this.console.log('Self-contained predictions:', predictions);\n                        this.updateTTYDisplayFromSelfContained(predictions);\n                    } catch (err) {\n                        this.console.error('Error analyzing audio chunk:', err);\n                    }\n                }\n            });\n        }\n    }\n\n    updateTTYDisplayFromExternal(text: string) {\n        this.console.log('External UI Output:', text);\n        this.ttyOutput += text + \"\\n\";\n    }\n\n    updateTTYDisplayFromSelfContained(predictions: any) {\n        const predictionText = JSON.stringify(predictions, null, 2);\n        this.console.log('Self-contained Analysis UI:', predictionText);\n        this.ttyOutput += predictionText + \"\\n\";\n    }\n\n    private pollExternalBirdNET() {\n        const pollInterval = 1000; // Poll every second\n        setInterval(() => {\n            http.get(this.settings.birdnetUIURL, (res) => {\n                let data = '';\n                res.on('data', chunk => data += chunk);\n                res.on('end', () => {\n                    try {\n                        const detections = JSON.parse(data);\n                        if (Array.isArray(detections)) {\n                            this.updateTTYDisplay(detections);\n                        }\n                    } catch (e) {\n                        process.stdout.write(`\\x1b[31mError parsing external BirdNET data\\x1b[0m\\n`);\n                    }\n                });\n            }).on('error', (err) => {\n                process.stdout.write(`\\x1b[31mError connecting to external BirdNET: ${err.message}\\x1b[0m\\n`);\n            });\n        }, pollInterval);\n    }\n\n    private updateTTYDisplay(detections: Array<{species: string, confidence: number}>) {\n        // Clear screen and move cursor home\n        process.stdout.write('\\x1Bc\\x1b[H');\n        \n        // Header\n        process.stdout.write('\\x1b[1m=== BirdNET Detections ===\\x1b[0m\\n\\n');\n        \n        // Mode indicator\n        process.stdout.write(`Mode: ${this.settings.mode}\\n`);\n        if (this.settings.mode === 'external') {\n            process.stdout.write(`Source: ${this.settings.birdnetUIURL}\\n`);\n        } else {\n            process.stdout.write(`Audio: ${this.settings.audioSource}\\n`);\n        }\n        process.stdout.write('\\n');\n\n        // Detections\n        if (detections.length === 0) {\n            process.stdout.write('No birds detected\\n');\n        } else {\n            detections.forEach(({species, confidence}) => {\n                const confidencePct = (confidence * 100).toFixed(1);\n                process.stdout.write(`\\x1b[1m${species}\\x1b[0m (${confidencePct}%)\\n`);\n            });\n        }\n\n        // Footer\n        process.stdout.write('\\n\\x1b[2mPress Ctrl+C to exit\\x1b[0m\\n');\n    }\n\n    startAudioCapture() {\n        if (this.settings.audioSource === 'rtsp') {\n            this.ffmpegAudioProcess = spawn('ffmpeg', [\n                '-i', this.settings.rtspAudioURL,\n                '-vn',\n                '-acodec', 'pcm_s16le',\n                '-ar', '48000',\n                '-ac', '1',\n                '-f', 'wav',\n                'pipe:1'\n            ]);\n\n            this.ffmpegAudioProcess.stdout.pipe(this.audioStream!);\n            \n            this.ffmpegAudioProcess.on('error', (err) => {\n                this.console.error('FFmpeg audio capture error:', err);\n            });\n        }\n    }\n\n    async getDevice(nativeId: string): Promise<Device> {\n        const device = {\n            name: \"BirdNET Audio Detector\",\n            type: ScryptedDeviceType.Sensor,\n            nativeId: nativeId,\n            interfaces: [ScryptedInterface.Settings],\n        };\n        return device;\n    }\n\n    async createDevice(settings: DeviceCreatorSettings): Promise<string> {\n        return settings.nativeId.toString();\n    }\n\n    async getSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'mode',\n                title: 'Operation Mode',\n                description: 'Choose between self-contained (uses bundled model) or external (connects to existing BirdNET instance)',\n                type: 'string',\n                choices: ['self-contained', 'external'],\n                value: this.settings.mode\n            },\n            {\n                key: 'audioSource',\n                title: 'Audio Source',\n                description: 'Select audio input source',\n                type: 'string',\n                choices: ['mic', 'rtsp'],\n                value: this.settings.audioSource\n            },\n            {\n                key: 'rtspAudioURL',\n                title: 'RTSP Audio URL',\n                description: 'URL for RTSP audio stream (only used if Audio Source is set to rtsp)',\n                type: 'string',\n                value: this.settings.rtspAudioURL,\n                placeholder: 'rtsp://camera.example.com/audio'\n            },\n            {\n                key: 'birdnetUIURL',\n                title: 'External BirdNET URL',\n                description: 'URL of external BirdNET instance (only used in external mode)',\n                type: 'string',\n                value: this.settings.birdnetUIURL,\n                placeholder: 'http://birdnet.local:8080'\n            },\n            {\n                key: 'birdnetThreshold',\n                title: 'Detection Threshold',\n                description: 'Minimum confidence threshold for bird detection (0.0 to 1.0)',\n                type: 'number',\n                value: this.settings.birdnetThreshold,\n                placeholder: '0.7'\n            }\n        ];\n    }\n\n    async putSetting(key: string, value: string | number): Promise<void> {\n        this.storage.setItem(key, value.toString());\n        this.settings[key] = value;\n        // Restart the service when settings change\n        await this.startBirdNET();\n    }\n\n    dispose() {\n        if (this.birdnetProcess) {\n            this.birdnetProcess.kill();\n            this.birdnetProcess = null;\n        }\n        \n        if (this.ffmpegAudioProcess) {\n            this.ffmpegAudioProcess.kill();\n            this.ffmpegAudioProcess = null;\n        }\n        if (this.audioStream) {\n            this.audioStream.destroy();\n            this.audioStream = null;\n        }\n    }\n\n    async getCreateDeviceSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'name',\n                title: 'Device Name',\n                type: 'string',\n            }\n        ];\n    }\n\n    async releaseDevice(id: string, nativeId: ScryptedNativeId): Promise<void> {\n        // Cleanup logic when device is removed\n    }\n\n    async analyzeAudioChunk(samples: Float32Array) {\n        try {\n            // Create WAV buffer from samples\n            const wavBuffer = this.createWavBuffer(samples);\n            // Write temporary WAV file\n            const os = require('os');\n            const fs = require('fs');\n            const path = require('path');\n            const tmpDir = os.tmpdir();\n            const tmpFile = path.join(tmpDir, `birdnet-${Date.now()}.wav`);\n            fs.writeFileSync(tmpFile, wavBuffer);\n\n            return new Promise((resolve, reject) => {\n                const pythonScript = path.join(process.env.SCRYPTED_PLUGIN_PATH || '', 'python/birdnet_analysis.py');\n                const pythonProcess = spawn('python3', [\n                    pythonScript,\n                    '--model', path.join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/BirdNET_GLOBAL_6K_V2.4_Model_FP16.tflite'),\n                    '--labels', path.join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/labels_nm.txt'),\n                    '--wav', tmpFile\n                ]);\n                let stdoutData = '';\n                let stderrData = '';\n                pythonProcess.stdout.on('data', data => { stdoutData += data.toString(); });\n                pythonProcess.stderr.on('data', data => { stderrData += data.toString(); });\n                pythonProcess.on('close', code => {\n                    fs.unlinkSync(tmpFile);\n                    if (code === 0) {\n                        try {\n                            const detections = JSON.parse(stdoutData);\n                            resolve(detections);\n                        } catch(err) {\n                            reject(new Error('Error parsing Python output: ' + err.message));\n                        }\n                    } else {\n                        reject(new Error('Python process exited with code ' + code + ': ' + stderrData));\n                    }\n                });\n            });\n        } catch (err) {\n            this.console.error('Audio analysis error:', err);\n            throw err;\n        }\n    }\n\n    private createWavBuffer(samples: Float32Array): Buffer {\n        const numChannels = 1;\n        const sampleRate = 48000;\n        const bitsPerSample = 16;\n        const byteRate = sampleRate * numChannels * bitsPerSample / 8;\n        const blockAlign = numChannels * bitsPerSample / 8;\n        const dataLength = samples.length * 2; // 2 bytes per sample\n        const buffer = Buffer.alloc(44 + dataLength);\n        // RIFF header\n        buffer.write('RIFF', 0);\n        buffer.writeUInt32LE(36 + dataLength, 4);\n        buffer.write('WAVE', 8);\n        // fmt subchunk\n        buffer.write('fmt ', 12);\n        buffer.writeUInt32LE(16, 16);\n        buffer.writeUInt16LE(1, 20); // PCM\n        buffer.writeUInt16LE(numChannels, 22);\n        buffer.writeUInt32LE(sampleRate, 24);\n        buffer.writeUInt32LE(byteRate, 28);\n        buffer.writeUInt16LE(blockAlign, 32);\n        buffer.writeUInt16LE(bitsPerSample, 34);\n        // data subchunk\n        buffer.write('data', 36);\n        buffer.writeUInt32LE(dataLength, 40);\n        \n        for (let i = 0; i < samples.length; i++) {\n            let s = Math.max(-1, Math.min(1, samples[i]));\n            let intSample = Math.round(s * 32767);\n            buffer.writeInt16LE(intSample, 44 + i * 2);\n        }\n        return buffer;\n    }\n\n    // Implement Web interface\n    async getResource(requestBody: string): Promise<string> {\n        return `<html><head><title>BirdNET TTY UI</title></head><body><pre>${this.ttyOutput}</pre></body></html>`;\n    }\n}\n\nexport default BirdNETPlugin;\n  "],"names":[],"sourceRoot":""}