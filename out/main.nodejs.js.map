{"version":3,"file":"main.nodejs.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW,GAAG,uBAAuB,GAAG,0BAA0B;AAClE,aAAa,mBAAO,CAAC,gFAAoB;AACzC,gBAAgB,mBAAO,CAAC,gFAAoB;AAC5C,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAkB,kBAAkB,EAMnD;AACT;AACA;AACA,uBAAuB,OAAuB;AAC9C;AACA,kCAAkC,OAAuB;AACzD;AACA;AACA;AACA;AACA,kCAAkC,4EAAQ,SAAS,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iJAAiJ;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,iCAAiC,GAAG,0BAA0B,GAAG,kBAAkB,GAAG,uBAAuB,GAAG,yBAAyB,GAAG,mBAAmB,GAAG,iBAAiB,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,uBAAuB,GAAG,eAAe,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,oCAAoC,GAAG,+BAA+B,GAAG,iCAAiC,GAAG,kBAAkB,GAAG,qBAAqB;AACvjB,qBAAqB;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,iCAAiC,iCAAiC;AACnoCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yBAAyB,0BAA0B,0BAA0B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mBAAmB,oBAAoB,oBAAoB;AAC5D;AACA;AACA;AACA;AACA,CAAC,cAAc,eAAe,eAAe;AAC7C;AACA;AACA;AACA;AACA,CAAC,sBAAsB,uBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qBAAqB,sBAAsB,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B,2BAA2B,2BAA2B;AACjF;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB,iBAAiB,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB,mBAAmB,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;AACA;AACA;AACA;AACA,CAAC,sBAAsB,uBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iBAAiB,kBAAkB,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yBAAyB,0BAA0B,0BAA0B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,iCAAiC,iCAAiC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uBAAuB,wBAAwB,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;;;;;;;;;;;ACjsCa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1fA,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","sources":["../node_modules/@scrypted/sdk/dist/src/index.js","../node_modules/@scrypted/sdk/dist/src|sync","../node_modules/@scrypted/sdk/dist/types/gen/index.js","../node_modules/fft.js/lib/fft.js","../src/birdnet-analyzer.ts","../src/main.ts","../external node-commonjs \"child_process\"","../external node-commonjs \"fs\"","../external node-commonjs \"http\"","../external node-commonjs \"module\"","../external node-commonjs \"path\"","../external node-commonjs \"stream\"","../webpack/bootstrap","../webpack/runtime/hasOwnProperty shorthand","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdk = exports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\nconst module_1 = require(\"module\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = exports.sdk.deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = exports.sdk.deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = exports.sdk.deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        this.nativeId = exports.sdk.systemManager.getDeviceById(this.id).nativeId;\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be discouraged and warned at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && typeof this._deviceState.id === 'string') {\n            this._deviceState = exports.sdk.deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = exports.sdk.deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (exports.sdk.deviceManager.getMixinConsole)\n                this._console = exports.sdk.deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = exports.sdk.deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            if (!this._deviceState) {\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            }\n            else {\n                // @ts-ignore: accessing private property\n                this._deviceState[state] = value;\n            }\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nexports.sdk = {};\ntry {\n    let loaded = false;\n    try {\n        // todo: remove usage of process.env.SCRYPTED_SDK_MODULE, only existed in prerelease builds.\n        // import.meta is not a reliable way to detect es module support in webpack since webpack\n        // evaluates that to true at runtime.\n        const esModule = process.env.SCRYPTED_SDK_ES_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        const cjsModule = process.env.SCRYPTED_SDK_CJS_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        // @ts-expect-error\n        if (esModule && typeof import.meta !== 'undefined') {\n            // @ts-expect-error\n            const require = (0, module_1.createRequire)(import.meta.url);\n            const sdkModule = require(esModule);\n            Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n            loaded = true;\n        }\n        else if (cjsModule) {\n            // @ts-expect-error\n            if (typeof __non_webpack_require__ !== 'undefined') {\n                // @ts-expect-error\n                const sdkModule = __non_webpack_require__(process.env.SCRYPTED_SDK_MODULE);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n            else {\n                const sdkModule = require(cjsModule);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n        }\n    }\n    catch (e) {\n        console.warn(\"failed to load sdk module\", e);\n        throw e;\n    }\n    if (!loaded) {\n        let runtimeAPI;\n        try {\n            runtimeAPI = pluginRuntimeAPI;\n        }\n        catch (e) {\n        }\n        Object.assign(exports.sdk, {\n            log: deviceManager.getDeviceLogger(undefined),\n            deviceManager,\n            endpointManager,\n            mediaManager,\n            systemManager,\n            pluginHostAPI,\n            ...runtimeAPI,\n        });\n    }\n    try {\n        exports.sdk.systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = exports.sdk;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@scrypted/sdk/dist/src sync recursive\";\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.AirPurifierMode = exports.AirPurifierStatus = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.3.107\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"scryptedRuntimeArguments\"] = \"scryptedRuntimeArguments\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"buttons\"] = \"buttons\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"audioVolumes\"] = \"audioVolumes\";\n    ScryptedInterfaceProperty[\"recordingActive\"] = \"recordingActive\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"converters\"] = \"converters\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"sleeping\"] = \"sleeping\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"airPurifierState\"] = \"airPurifierState\";\n    ScryptedInterfaceProperty[\"filterChangeIndication\"] = \"filterChangeIndication\";\n    ScryptedInterfaceProperty[\"filterLifeLevel\"] = \"filterLifeLevel\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n    ScryptedInterfaceProperty[\"systemDevice\"] = \"systemDevice\";\n})(ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"pressButton\"] = \"pressButton\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"setAudioVolumes\"] = \"setAudioVolumes\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getPrivacyMasks\"] = \"getPrivacyMasks\";\n    ScryptedInterfaceMethod[\"setPrivacyMasks\"] = \"setPrivacyMasks\";\n    ScryptedInterfaceMethod[\"getVideoTextOverlays\"] = \"getVideoTextOverlays\";\n    ScryptedInterfaceMethod[\"setVideoTextOverlay\"] = \"setVideoTextOverlay\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"deleteRecordingStream\"] = \"deleteRecordingStream\";\n    ScryptedInterfaceMethod[\"setRecordingActive\"] = \"setRecordingActive\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"reboot\"] = \"reboot\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"convertMedia\"] = \"convertMedia\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"setAirPurifierState\"] = \"setAirPurifierState\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"forkInterface\"] = \"forkInterface\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n    ScryptedInterfaceMethod[\"connectStream\"] = \"connectStream\";\n    ScryptedInterfaceMethod[\"getTTYSettings\"] = \"getTTYSettings\";\n})(ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    \"ScryptedDevice\": {\n        \"name\": \"ScryptedDevice\",\n        \"methods\": [\n            \"listen\",\n            \"probe\",\n            \"setMixins\",\n            \"setName\",\n            \"setRoom\",\n            \"setType\"\n        ],\n        \"properties\": [\n            \"id\",\n            \"info\",\n            \"interfaces\",\n            \"mixins\",\n            \"name\",\n            \"nativeId\",\n            \"pluginId\",\n            \"providedInterfaces\",\n            \"providedName\",\n            \"providedRoom\",\n            \"providedType\",\n            \"providerId\",\n            \"room\",\n            \"type\"\n        ]\n    },\n    \"ScryptedPlugin\": {\n        \"name\": \"ScryptedPlugin\",\n        \"methods\": [\n            \"getPluginJson\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedPluginRuntime\": {\n        \"name\": \"ScryptedPluginRuntime\",\n        \"methods\": [],\n        \"properties\": [\n            \"scryptedRuntimeArguments\"\n        ]\n    },\n    \"OnOff\": {\n        \"name\": \"OnOff\",\n        \"methods\": [\n            \"turnOff\",\n            \"turnOn\"\n        ],\n        \"properties\": [\n            \"on\"\n        ]\n    },\n    \"Brightness\": {\n        \"name\": \"Brightness\",\n        \"methods\": [\n            \"setBrightness\"\n        ],\n        \"properties\": [\n            \"brightness\"\n        ]\n    },\n    \"ColorSettingTemperature\": {\n        \"name\": \"ColorSettingTemperature\",\n        \"methods\": [\n            \"getTemperatureMaxK\",\n            \"getTemperatureMinK\",\n            \"setColorTemperature\"\n        ],\n        \"properties\": [\n            \"colorTemperature\"\n        ]\n    },\n    \"ColorSettingRgb\": {\n        \"name\": \"ColorSettingRgb\",\n        \"methods\": [\n            \"setRgb\"\n        ],\n        \"properties\": [\n            \"rgb\"\n        ]\n    },\n    \"ColorSettingHsv\": {\n        \"name\": \"ColorSettingHsv\",\n        \"methods\": [\n            \"setHsv\"\n        ],\n        \"properties\": [\n            \"hsv\"\n        ]\n    },\n    \"Buttons\": {\n        \"name\": \"Buttons\",\n        \"methods\": [],\n        \"properties\": [\n            \"buttons\"\n        ]\n    },\n    \"PressButtons\": {\n        \"name\": \"PressButtons\",\n        \"methods\": [\n            \"pressButton\"\n        ],\n        \"properties\": []\n    },\n    \"Notifier\": {\n        \"name\": \"Notifier\",\n        \"methods\": [\n            \"sendNotification\"\n        ],\n        \"properties\": []\n    },\n    \"StartStop\": {\n        \"name\": \"StartStop\",\n        \"methods\": [\n            \"start\",\n            \"stop\"\n        ],\n        \"properties\": [\n            \"running\"\n        ]\n    },\n    \"Pause\": {\n        \"name\": \"Pause\",\n        \"methods\": [\n            \"pause\",\n            \"resume\"\n        ],\n        \"properties\": [\n            \"paused\"\n        ]\n    },\n    \"Dock\": {\n        \"name\": \"Dock\",\n        \"methods\": [\n            \"dock\"\n        ],\n        \"properties\": [\n            \"docked\"\n        ]\n    },\n    \"TemperatureSetting\": {\n        \"name\": \"TemperatureSetting\",\n        \"methods\": [\n            \"setTemperature\"\n        ],\n        \"properties\": [\n            \"temperatureSetting\"\n        ]\n    },\n    \"Thermometer\": {\n        \"name\": \"Thermometer\",\n        \"methods\": [\n            \"setTemperatureUnit\"\n        ],\n        \"properties\": [\n            \"temperature\",\n            \"temperatureUnit\"\n        ]\n    },\n    \"HumiditySensor\": {\n        \"name\": \"HumiditySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"humidity\"\n        ]\n    },\n    \"Camera\": {\n        \"name\": \"Camera\",\n        \"methods\": [\n            \"getPictureOptions\",\n            \"takePicture\"\n        ],\n        \"properties\": []\n    },\n    \"Microphone\": {\n        \"name\": \"Microphone\",\n        \"methods\": [\n            \"getAudioStream\"\n        ],\n        \"properties\": []\n    },\n    \"AudioVolumeControl\": {\n        \"name\": \"AudioVolumeControl\",\n        \"methods\": [\n            \"setAudioVolumes\"\n        ],\n        \"properties\": [\n            \"audioVolumes\"\n        ]\n    },\n    \"Display\": {\n        \"name\": \"Display\",\n        \"methods\": [\n            \"startDisplay\",\n            \"stopDisplay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCamera\": {\n        \"name\": \"VideoCamera\",\n        \"methods\": [\n            \"getVideoStream\",\n            \"getVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraMask\": {\n        \"name\": \"VideoCameraMask\",\n        \"methods\": [\n            \"getPrivacyMasks\",\n            \"setPrivacyMasks\"\n        ],\n        \"properties\": []\n    },\n    \"VideoTextOverlays\": {\n        \"name\": \"VideoTextOverlays\",\n        \"methods\": [\n            \"getVideoTextOverlays\",\n            \"setVideoTextOverlay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoRecorder\": {\n        \"name\": \"VideoRecorder\",\n        \"methods\": [\n            \"getRecordingStream\",\n            \"getRecordingStreamCurrentTime\",\n            \"getRecordingStreamOptions\",\n            \"getRecordingStreamThumbnail\"\n        ],\n        \"properties\": [\n            \"recordingActive\"\n        ]\n    },\n    \"VideoRecorderManagement\": {\n        \"name\": \"VideoRecorderManagement\",\n        \"methods\": [\n            \"deleteRecordingStream\",\n            \"setRecordingActive\"\n        ],\n        \"properties\": []\n    },\n    \"PanTiltZoom\": {\n        \"name\": \"PanTiltZoom\",\n        \"methods\": [\n            \"ptzCommand\"\n        ],\n        \"properties\": [\n            \"ptzCapabilities\"\n        ]\n    },\n    \"EventRecorder\": {\n        \"name\": \"EventRecorder\",\n        \"methods\": [\n            \"getRecordedEvents\"\n        ],\n        \"properties\": []\n    },\n    \"VideoClips\": {\n        \"name\": \"VideoClips\",\n        \"methods\": [\n            \"getVideoClip\",\n            \"getVideoClips\",\n            \"getVideoClipThumbnail\",\n            \"removeVideoClips\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraConfiguration\": {\n        \"name\": \"VideoCameraConfiguration\",\n        \"methods\": [\n            \"setVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"Intercom\": {\n        \"name\": \"Intercom\",\n        \"methods\": [\n            \"startIntercom\",\n            \"stopIntercom\"\n        ],\n        \"properties\": []\n    },\n    \"Lock\": {\n        \"name\": \"Lock\",\n        \"methods\": [\n            \"lock\",\n            \"unlock\"\n        ],\n        \"properties\": [\n            \"lockState\"\n        ]\n    },\n    \"PasswordStore\": {\n        \"name\": \"PasswordStore\",\n        \"methods\": [\n            \"addPassword\",\n            \"getPasswords\",\n            \"removePassword\"\n        ],\n        \"properties\": []\n    },\n    \"Scene\": {\n        \"name\": \"Scene\",\n        \"methods\": [\n            \"activate\",\n            \"deactivate\",\n            \"isReversible\"\n        ],\n        \"properties\": []\n    },\n    \"Entry\": {\n        \"name\": \"Entry\",\n        \"methods\": [\n            \"closeEntry\",\n            \"openEntry\"\n        ],\n        \"properties\": []\n    },\n    \"EntrySensor\": {\n        \"name\": \"EntrySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"entryOpen\"\n        ]\n    },\n    \"DeviceProvider\": {\n        \"name\": \"DeviceProvider\",\n        \"methods\": [\n            \"getDevice\",\n            \"releaseDevice\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceDiscovery\": {\n        \"name\": \"DeviceDiscovery\",\n        \"methods\": [\n            \"adoptDevice\",\n            \"discoverDevices\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceCreator\": {\n        \"name\": \"DeviceCreator\",\n        \"methods\": [\n            \"createDevice\",\n            \"getCreateDeviceSettings\"\n        ],\n        \"properties\": []\n    },\n    \"Battery\": {\n        \"name\": \"Battery\",\n        \"methods\": [],\n        \"properties\": [\n            \"batteryLevel\"\n        ]\n    },\n    \"Charger\": {\n        \"name\": \"Charger\",\n        \"methods\": [],\n        \"properties\": [\n            \"chargeState\"\n        ]\n    },\n    \"Reboot\": {\n        \"name\": \"Reboot\",\n        \"methods\": [\n            \"reboot\"\n        ],\n        \"properties\": []\n    },\n    \"Refresh\": {\n        \"name\": \"Refresh\",\n        \"methods\": [\n            \"getRefreshFrequency\",\n            \"refresh\"\n        ],\n        \"properties\": []\n    },\n    \"MediaPlayer\": {\n        \"name\": \"MediaPlayer\",\n        \"methods\": [\n            \"getMediaStatus\",\n            \"load\",\n            \"seek\",\n            \"skipNext\",\n            \"skipPrevious\"\n        ],\n        \"properties\": []\n    },\n    \"Online\": {\n        \"name\": \"Online\",\n        \"methods\": [],\n        \"properties\": [\n            \"online\"\n        ]\n    },\n    \"BufferConverter\": {\n        \"name\": \"BufferConverter\",\n        \"methods\": [\n            \"convert\"\n        ],\n        \"properties\": [\n            \"fromMimeType\",\n            \"toMimeType\"\n        ]\n    },\n    \"MediaConverter\": {\n        \"name\": \"MediaConverter\",\n        \"methods\": [\n            \"convertMedia\"\n        ],\n        \"properties\": [\n            \"converters\"\n        ]\n    },\n    \"Settings\": {\n        \"name\": \"Settings\",\n        \"methods\": [\n            \"getSettings\",\n            \"putSetting\"\n        ],\n        \"properties\": []\n    },\n    \"BinarySensor\": {\n        \"name\": \"BinarySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"binaryState\"\n        ]\n    },\n    \"TamperSensor\": {\n        \"name\": \"TamperSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"tampered\"\n        ]\n    },\n    \"Sleep\": {\n        \"name\": \"Sleep\",\n        \"methods\": [],\n        \"properties\": [\n            \"sleeping\"\n        ]\n    },\n    \"PowerSensor\": {\n        \"name\": \"PowerSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"powerDetected\"\n        ]\n    },\n    \"AudioSensor\": {\n        \"name\": \"AudioSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"audioDetected\"\n        ]\n    },\n    \"MotionSensor\": {\n        \"name\": \"MotionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"motionDetected\"\n        ]\n    },\n    \"AmbientLightSensor\": {\n        \"name\": \"AmbientLightSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ambientLight\"\n        ]\n    },\n    \"OccupancySensor\": {\n        \"name\": \"OccupancySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"occupied\"\n        ]\n    },\n    \"FloodSensor\": {\n        \"name\": \"FloodSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"flooded\"\n        ]\n    },\n    \"UltravioletSensor\": {\n        \"name\": \"UltravioletSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ultraviolet\"\n        ]\n    },\n    \"LuminanceSensor\": {\n        \"name\": \"LuminanceSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"luminance\"\n        ]\n    },\n    \"PositionSensor\": {\n        \"name\": \"PositionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"position\"\n        ]\n    },\n    \"SecuritySystem\": {\n        \"name\": \"SecuritySystem\",\n        \"methods\": [\n            \"armSecuritySystem\",\n            \"disarmSecuritySystem\"\n        ],\n        \"properties\": [\n            \"securitySystemState\"\n        ]\n    },\n    \"PM10Sensor\": {\n        \"name\": \"PM10Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm10Density\"\n        ]\n    },\n    \"PM25Sensor\": {\n        \"name\": \"PM25Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm25Density\"\n        ]\n    },\n    \"VOCSensor\": {\n        \"name\": \"VOCSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"vocDensity\"\n        ]\n    },\n    \"NOXSensor\": {\n        \"name\": \"NOXSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"noxDensity\"\n        ]\n    },\n    \"CO2Sensor\": {\n        \"name\": \"CO2Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"co2ppm\"\n        ]\n    },\n    \"AirQualitySensor\": {\n        \"name\": \"AirQualitySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"airQuality\"\n        ]\n    },\n    \"AirPurifier\": {\n        \"name\": \"AirPurifier\",\n        \"methods\": [\n            \"setAirPurifierState\"\n        ],\n        \"properties\": [\n            \"airPurifierState\"\n        ]\n    },\n    \"FilterMaintenance\": {\n        \"name\": \"FilterMaintenance\",\n        \"methods\": [],\n        \"properties\": [\n            \"filterChangeIndication\",\n            \"filterLifeLevel\"\n        ]\n    },\n    \"Readme\": {\n        \"name\": \"Readme\",\n        \"methods\": [\n            \"getReadmeMarkdown\"\n        ],\n        \"properties\": []\n    },\n    \"OauthClient\": {\n        \"name\": \"OauthClient\",\n        \"methods\": [\n            \"getOauthUrl\",\n            \"onOauthCallback\"\n        ],\n        \"properties\": []\n    },\n    \"MixinProvider\": {\n        \"name\": \"MixinProvider\",\n        \"methods\": [\n            \"canMixin\",\n            \"getMixin\",\n            \"releaseMixin\"\n        ],\n        \"properties\": []\n    },\n    \"HttpRequestHandler\": {\n        \"name\": \"HttpRequestHandler\",\n        \"methods\": [\n            \"onRequest\"\n        ],\n        \"properties\": []\n    },\n    \"EngineIOHandler\": {\n        \"name\": \"EngineIOHandler\",\n        \"methods\": [\n            \"onConnection\"\n        ],\n        \"properties\": []\n    },\n    \"PushHandler\": {\n        \"name\": \"PushHandler\",\n        \"methods\": [\n            \"onPush\"\n        ],\n        \"properties\": []\n    },\n    \"Program\": {\n        \"name\": \"Program\",\n        \"methods\": [\n            \"run\"\n        ],\n        \"properties\": []\n    },\n    \"Scriptable\": {\n        \"name\": \"Scriptable\",\n        \"methods\": [\n            \"eval\",\n            \"loadScripts\",\n            \"saveScript\"\n        ],\n        \"properties\": []\n    },\n    \"ClusterForkInterface\": {\n        \"name\": \"ClusterForkInterface\",\n        \"methods\": [\n            \"forkInterface\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectTracker\": {\n        \"name\": \"ObjectTracker\",\n        \"methods\": [\n            \"trackObjects\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetector\": {\n        \"name\": \"ObjectDetector\",\n        \"methods\": [\n            \"getDetectionInput\",\n            \"getObjectTypes\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetection\": {\n        \"name\": \"ObjectDetection\",\n        \"methods\": [\n            \"detectObjects\",\n            \"generateObjectDetections\",\n            \"getDetectionModel\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetectionPreview\": {\n        \"name\": \"ObjectDetectionPreview\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ObjectDetectionGenerator\": {\n        \"name\": \"ObjectDetectionGenerator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"HumiditySetting\": {\n        \"name\": \"HumiditySetting\",\n        \"methods\": [\n            \"setHumidity\"\n        ],\n        \"properties\": [\n            \"humiditySetting\"\n        ]\n    },\n    \"Fan\": {\n        \"name\": \"Fan\",\n        \"methods\": [\n            \"setFan\"\n        ],\n        \"properties\": [\n            \"fan\"\n        ]\n    },\n    \"RTCSignalingChannel\": {\n        \"name\": \"RTCSignalingChannel\",\n        \"methods\": [\n            \"startRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"RTCSignalingClient\": {\n        \"name\": \"RTCSignalingClient\",\n        \"methods\": [\n            \"createRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"LauncherApplication\": {\n        \"name\": \"LauncherApplication\",\n        \"methods\": [],\n        \"properties\": [\n            \"applicationInfo\"\n        ]\n    },\n    \"ScryptedUser\": {\n        \"name\": \"ScryptedUser\",\n        \"methods\": [\n            \"getScryptedUserAccessControl\"\n        ],\n        \"properties\": []\n    },\n    \"VideoFrameGenerator\": {\n        \"name\": \"VideoFrameGenerator\",\n        \"methods\": [\n            \"generateVideoFrames\"\n        ],\n        \"properties\": []\n    },\n    \"StreamService\": {\n        \"name\": \"StreamService\",\n        \"methods\": [\n            \"connectStream\"\n        ],\n        \"properties\": []\n    },\n    \"TTY\": {\n        \"name\": \"TTY\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"TTYSettings\": {\n        \"name\": \"TTYSettings\",\n        \"methods\": [\n            \"getTTYSettings\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedSystemDevice\": {\n        \"name\": \"ScryptedSystemDevice\",\n        \"methods\": [],\n        \"properties\": [\n            \"systemDevice\"\n        ]\n    },\n    \"ScryptedDeviceCreator\": {\n        \"name\": \"ScryptedDeviceCreator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ScryptedSettings\": {\n        \"name\": \"ScryptedSettings\",\n        \"methods\": [],\n        \"properties\": []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType || (exports.ScryptedDeviceType = ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode || (exports.HumidityMode = HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode || (exports.FanMode = FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit || (exports.TemperatureUnit = TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode || (exports.ThermostatMode = ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n    PanTiltZoomMovement[\"Continuous\"] = \"Continuous\";\n    PanTiltZoomMovement[\"Preset\"] = \"Preset\";\n    PanTiltZoomMovement[\"Home\"] = \"Home\";\n})(PanTiltZoomMovement || (exports.PanTiltZoomMovement = PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState || (exports.LockState = LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState || (exports.ChargeState = ChargeState = {}));\nvar AirPurifierStatus;\n(function (AirPurifierStatus) {\n    AirPurifierStatus[\"Inactive\"] = \"Inactive\";\n    AirPurifierStatus[\"Idle\"] = \"Idle\";\n    AirPurifierStatus[\"Active\"] = \"Active\";\n    AirPurifierStatus[\"ActiveNightMode\"] = \"ActiveNightMode\";\n})(AirPurifierStatus || (exports.AirPurifierStatus = AirPurifierStatus = {}));\nvar AirPurifierMode;\n(function (AirPurifierMode) {\n    AirPurifierMode[\"Manual\"] = \"Manual\";\n    AirPurifierMode[\"Automatic\"] = \"Automatic\";\n})(AirPurifierMode || (exports.AirPurifierMode = AirPurifierMode = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality || (exports.AirQuality = AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode || (exports.SecuritySystemMode = SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction || (exports.SecuritySystemObstruction = SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState || (exports.MediaPlayerState = MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"ScryptedPluginRuntime\"] = \"ScryptedPluginRuntime\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Buttons\"] = \"Buttons\";\n    ScryptedInterface[\"PressButtons\"] = \"PressButtons\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"AudioVolumeControl\"] = \"AudioVolumeControl\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoCameraMask\"] = \"VideoCameraMask\";\n    ScryptedInterface[\"VideoTextOverlays\"] = \"VideoTextOverlays\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"VideoRecorderManagement\"] = \"VideoRecorderManagement\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Reboot\"] = \"Reboot\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"MediaConverter\"] = \"MediaConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"Sleep\"] = \"Sleep\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedInterface[\"FilterMaintenance\"] = \"FilterMaintenance\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ClusterForkInterface\"] = \"ClusterForkInterface\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"ObjectDetectionPreview\"] = \"ObjectDetectionPreview\";\n    ScryptedInterface[\"ObjectDetectionGenerator\"] = \"ObjectDetectionGenerator\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n    ScryptedInterface[\"StreamService\"] = \"StreamService\";\n    ScryptedInterface[\"TTY\"] = \"TTY\";\n    ScryptedInterface[\"TTYSettings\"] = \"TTYSettings\";\n    ScryptedInterface[\"ScryptedSystemDevice\"] = \"ScryptedSystemDevice\";\n    ScryptedInterface[\"ScryptedDeviceCreator\"] = \"ScryptedDeviceCreator\";\n    ScryptedInterface[\"ScryptedSettings\"] = \"ScryptedSettings\";\n})(ScryptedInterface || (exports.ScryptedInterface = ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"ServerId\"] = \"text/x-server-id\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes || (exports.ScryptedMimeTypes = ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","import sdk from '@scrypted/sdk';\nimport FFT from 'fft.js';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst { systemManager } = sdk;\n\n// Instead of top-level await, we'll initialize in a function\nlet tflite: any;\n\nasync function initTFLite() {\n    if (!tflite) {\n        tflite = await systemManager.getComponent('tensorflow-lite');\n    }\n    return tflite;\n}\n\n// Constants from BirdNET-Analyzer\nconst SAMPLE_RATE = 48000;\nconst SPEC_LENGTH = 384;\nconst MEL_BANDS = 128;\nconst WINDOW_SIZE = 2048;\nconst HOP_LENGTH = 1024;\n\n// Use absolute paths from plugin root\nconst MODEL_PATH = join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/BirdNET_GLOBAL_6K_V2.4_Model_FP16.tflite');\nconst LABELS_PATH = join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/labels_en.txt');\n\nexport async function loadModelAndLabels() {\n    try {\n        // Initialize TFLite first\n        tflite = await initTFLite();\n        \n        // Read the model file\n        const modelBuffer = readFileSync(MODEL_PATH);\n        \n        // Read and parse the English labels file\n        const labelsText = readFileSync(LABELS_PATH, 'utf8');\n        const labels = labelsText.split('\\n')\n            .map(line => line.trim())\n            .filter(line => line.length > 0);\n        \n        // Load model using Scrypted's TFLite\n        const model = await tflite.loadModel(modelBuffer);\n        \n        return { model, labels };\n    } catch (err) {\n        console.error('Error loading model/labels:', err);\n        throw err;\n    }\n}\n\nexport async function createSpectrogram(samples: Float32Array) {\n    try {\n        // Create overlapping windows\n        const frames = [];\n        for (let i = 0; i < samples.length - WINDOW_SIZE; i += HOP_LENGTH) {\n            const frame = samples.slice(i, i + WINDOW_SIZE);\n            frames.push(frame);\n        }\n\n        // Apply FFT to each frame\n        const fft = new FFT(WINDOW_SIZE);\n        const spectrogramFrames = frames.map(frame => {\n            // Apply Hann window\n            const windowedFrame = frame.map((x, i) => \n                x * (0.5 - 0.5 * Math.cos(2 * Math.PI * i / (WINDOW_SIZE - 1)))\n            );\n            \n            // Compute FFT\n            const fftResult = fft.createComplexArray();\n            fft.realTransform(fftResult, windowedFrame);\n            \n            // Get magnitude\n            const magnitudes = new Float32Array(WINDOW_SIZE / 2 + 1);\n            for (let i = 0; i < magnitudes.length; i++) {\n                const real = fftResult[2 * i];\n                const imag = fftResult[2 * i + 1];\n                magnitudes[i] = Math.sqrt(real * real + imag * imag);\n            }\n            \n            return magnitudes;\n        });\n\n        // Convert to mel scale\n        const melBasis = createMelFilterbank(WINDOW_SIZE / 2 + 1, SAMPLE_RATE, MEL_BANDS);\n        const melSpectrogram = spectrogramFrames.map(frame => {\n            return applyMelFilterbank(frame, melBasis);\n        });\n\n        // Convert to dB scale and normalize\n        const spec = new Float32Array(melSpectrogram.flat());\n        const tensor = await tflite.createTensor(spec, [1, melSpectrogram.length, MEL_BANDS, 1]);\n        \n        return tensor;\n    } catch (err) {\n        console.error('Error creating spectrogram:', err);\n        throw err;\n    }\n}\n\nfunction createMelFilterbank(nFft: number, sampleRate: number, nMels: number) {\n    // Create mel scale points\n    const melMax = freqToMel(sampleRate / 2);\n    const melMin = freqToMel(0);\n    const melStep = (melMax - melMin) / (nMels + 1);\n    const melFreqs = Array.from({length: nMels + 2}, (_, i) => melMin + melStep * i);\n    const freqPoints = melFreqs.map(mel => melToFreq(mel));\n    \n    // Create filterbank matrix\n    const filterbank = new Array(nMels).fill(0).map(() => new Float32Array(nFft));\n    \n    for (let i = 0; i < nMels; i++) {\n        const f_left = freqPoints[i];\n        const f_center = freqPoints[i + 1];\n        const f_right = freqPoints[i + 2];\n        \n        for (let j = 0; j < nFft; j++) {\n            const freq = (j * sampleRate) / (2 * nFft);\n            \n            if (freq >= f_left && freq <= f_right) {\n                if (freq <= f_center) {\n                    filterbank[i][j] = (freq - f_left) / (f_center - f_left);\n                } else {\n                    filterbank[i][j] = (f_right - freq) / (f_right - f_center);\n                }\n            }\n        }\n    }\n    \n    return filterbank;\n}\n\nfunction freqToMel(freq: number): number {\n    return 2595 * Math.log10(1 + freq / 700);\n}\n\nfunction melToFreq(mel: number): number {\n    return 700 * (Math.pow(10, mel / 2595) - 1);\n}\n\nfunction applyMelFilterbank(spectrum: Float32Array, filterbank: Float32Array[]) {\n    return filterbank.map(filter => {\n        let sum = 0;\n        for (let i = 0; i < spectrum.length; i++) {\n            sum += spectrum[i] * filter[i];\n        }\n        return sum;\n    });\n}\n\nexport async function predict(model: any, spectrogram: any) {\n    try {\n        // Run inference using TFLite\n        const predictions = await model.predict(spectrogram);\n        return predictions;\n    } catch (err) {\n        console.error('Error during prediction:', err);\n        throw err;\n    }\n} ","import {\n    ScryptedDeviceBase,\n    DeviceProvider,\n    DeviceCreator,\n    Device,\n    ScryptedInterface,\n    Setting,\n    Settings,\n    MediaManager,\n    DeviceManager,\n    ScryptedDeviceType,\n    ScryptedNativeId,\n    MediaObject,\n    RequestMediaStreamOptions,\n    FFmpegInput,\n    VideoCamera,\n    ResponseMediaStreamOptions,\n    sdk\n} from '@scrypted/sdk';\nimport { spawn, type ChildProcessWithoutNullStreams } from 'child_process';\nimport { PassThrough } from 'stream';\nimport { loadModelAndLabels, createSpectrogram, predict } from './birdnet-analyzer';\nimport { join } from 'path';\nimport { readFileSync } from 'fs';\nimport http from 'http';\n\nclass BirdNETPlugin extends ScryptedDeviceBase implements DeviceProvider, DeviceCreator {\n    devices: Map<string, any> = new Map();\n    mediaManager: MediaManager;\n    deviceManager: DeviceManager;\n\n    // Process references for managing child processes\n    birdnetProcess: ChildProcessWithoutNullStreams | null = null;\n    audioStream: PassThrough | null = null;\n    ffmpegAudioProcess: ChildProcessWithoutNullStreams | null = null;\n\n    // Add model property\n    private model: any = null;\n    private labels: any;\n\n    // Plugin settings\n    settings: { [key: string]: any } = {};\n\n    constructor(nativeId?: string) {\n        super(nativeId);\n        this.mediaManager = sdk.mediaManager;\n        this.deviceManager = sdk.deviceManager;\n        \n        this.loadSettings();\n        if (this.settings.mode === 'self-contained') {\n            this.initializeModel();\n        }\n        this.startBirdNET();\n    }\n\n    loadSettings() {\n        this.settings.mode = this.storage.getItem('mode') || 'self-contained';\n        this.settings.birdnetUIURL = this.storage.getItem('birdnetUIURL') || 'http://birdnet.local:8080';\n        this.settings.audioSource = this.storage.getItem('audioSource') || 'mic';\n        this.settings.rtspAudioURL = this.storage.getItem('rtspAudioURL') || '';\n        this.settings.birdnetThreshold = parseFloat(this.storage.getItem('birdnetThreshold') || '0.7');\n    }\n\n    async startBirdNET() {\n        try {\n            if (this.settings.mode === 'self-contained') {\n                // Initialize audio stream for self-contained mode\n                this.audioStream = new PassThrough();\n                if (this.settings.audioSource === 'rtsp') {\n                    this.startAudioCapture();\n                }\n\n                try {\n                    this.console.log('Starting BirdNET-Go...');\n                    \n                    // Check if BirdNET-Go is installed\n                    try {\n                        await new Promise((resolve, reject) => {\n                            const proc = spawn('which', ['birdnet-go']);\n                            proc.on('exit', (code) => code === 0 ? resolve(null) : reject());\n                        });\n                    } catch (e) {\n                        throw new Error('BirdNET-Go not found. Please install BirdNET-Go first.');\n                    }\n                    \n                    // Start BirdNET-Go with appropriate flags\n                    this.birdnetProcess = spawn('birdnet-go', [\n                        'realtime',\n                        '--threshold', this.settings.birdnetThreshold.toString(),\n                        '--locale', 'en',\n                        ...(this.settings.audioSource === 'rtsp' ? ['--audio-stdin'] : [])\n                    ]);\n\n                    if (this.settings.audioSource === 'rtsp') {\n                        this.audioStream.pipe(this.birdnetProcess.stdin);\n                    }\n\n                    // Handle BirdNET-Go output in TTY\n                    this.birdnetProcess.stdout.on('data', (data) => {\n                        const text = data.toString();\n                        const match = text.match(/Detected\\s+(.+?)\\s+\\((0\\.\\d+)\\)/);\n                        if (match) {\n                            const [_, species, confidence] = match;\n                            const confidencePct = (parseFloat(confidence) * 100).toFixed(1);\n                            this.updateTTYDisplay([{\n                                species,\n                                confidence: parseFloat(confidence)\n                            }]);\n                        }\n                    });\n\n                } catch (err: unknown) {\n                    if (err instanceof Error) {\n                        this.console.error('Failed to start BirdNET-Go:', err.message);\n                        process.stdout.write(`\\x1b[31mError: ${err.message}\\x1b[0m\\n`);\n                    }\n                    throw err;\n                }\n            } else {\n                // External mode - poll the external BirdNET instance\n                this.pollExternalBirdNET();\n            }\n        } catch (err: any) {\n            this.console.error('Error starting BirdNET:', err.message);\n            process.stdout.write(`\\x1b[31mError: ${err.message}\\x1b[0m\\n`);\n            throw err;\n        }\n    }\n\n    private pollExternalBirdNET() {\n        const pollInterval = 1000; // Poll every second\n        setInterval(() => {\n            http.get(this.settings.birdnetUIURL, (res) => {\n                let data = '';\n                res.on('data', chunk => data += chunk);\n                res.on('end', () => {\n                    try {\n                        const detections = JSON.parse(data);\n                        if (Array.isArray(detections)) {\n                            this.updateTTYDisplay(detections);\n                        }\n                    } catch (e) {\n                        process.stdout.write(`\\x1b[31mError parsing external BirdNET data\\x1b[0m\\n`);\n                    }\n                });\n            }).on('error', (err) => {\n                process.stdout.write(`\\x1b[31mError connecting to external BirdNET: ${err.message}\\x1b[0m\\n`);\n            });\n        }, pollInterval);\n    }\n\n    private updateTTYDisplay(detections: Array<{species: string, confidence: number}>) {\n        // Clear screen and move cursor home\n        process.stdout.write('\\x1Bc\\x1b[H');\n        \n        // Header\n        process.stdout.write('\\x1b[1m=== BirdNET Detections ===\\x1b[0m\\n\\n');\n        \n        // Mode indicator\n        process.stdout.write(`Mode: ${this.settings.mode}\\n`);\n        if (this.settings.mode === 'external') {\n            process.stdout.write(`Source: ${this.settings.birdnetUIURL}\\n`);\n        } else {\n            process.stdout.write(`Audio: ${this.settings.audioSource}\\n`);\n        }\n        process.stdout.write('\\n');\n\n        // Detections\n        if (detections.length === 0) {\n            process.stdout.write('No birds detected\\n');\n        } else {\n            detections.forEach(({species, confidence}) => {\n                const confidencePct = (confidence * 100).toFixed(1);\n                process.stdout.write(`\\x1b[1m${species}\\x1b[0m (${confidencePct}%)\\n`);\n            });\n        }\n\n        // Footer\n        process.stdout.write('\\n\\x1b[2mPress Ctrl+C to exit\\x1b[0m\\n');\n    }\n\n    startAudioCapture() {\n        if (this.settings.audioSource === 'rtsp') {\n            this.ffmpegAudioProcess = spawn('ffmpeg', [\n                '-i', this.settings.rtspAudioURL,\n                '-vn',\n                '-acodec', 'pcm_s16le',\n                '-ar', '48000',\n                '-ac', '1',\n                '-f', 'wav',\n                'pipe:1'\n            ]);\n\n            this.ffmpegAudioProcess.stdout.pipe(this.audioStream!);\n            \n            this.ffmpegAudioProcess.on('error', (err) => {\n                this.console.error('FFmpeg audio capture error:', err);\n            });\n        }\n    }\n\n    async getDevice(nativeId: string) {\n        if (!this.devices.has(nativeId)) {\n            const device = new BirdNETCameraDevice(nativeId);\n            this.devices.set(nativeId, device);\n        }\n        return this.devices.get(nativeId);\n    }\n\n    async createDevice(device: {\n        nativeId: string;\n        name: string;\n        type: ScryptedDeviceType;\n        interfaces: string[];\n    }): Promise<string> {\n        // For a single device, we simply return the nativeId.\n        return device.nativeId;\n    }\n\n    async getSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'mode',\n                title: 'Operation Mode',\n                description: 'Select \"self-contained\" or \"external\" mode',\n                type: 'string',\n                value: this.settings.mode || 'self-contained'\n            },\n            {\n                key: 'birdnetUIURL',\n                title: 'BirdNET UI URL',\n                description: 'URL for BirdNET UI when in external mode',\n                type: 'string',\n                value: this.settings.birdnetUIURL || 'http://birdnet.local:8080'\n            },\n            {\n                key: 'audioSource',\n                title: 'Audio Source',\n                description: 'Choose \"mic\" for local microphone or \"rtsp\" for RTSP audio feed',\n                type: 'string',\n                value: this.settings.audioSource || 'mic'\n            },\n            {\n                key: 'rtspAudioURL',\n                title: 'RTSP Audio URL',\n                description: 'RTSP URL for audio capture if using RTSP audio',\n                type: 'string',\n                value: this.settings.rtspAudioURL || ''\n            },\n            {\n                key: 'birdnetThreshold',\n                title: 'BirdNET Confidence Threshold',\n                description: 'Confidence threshold for bird detection (e.g., 0.7)',\n                type: 'number',\n                value: this.settings.birdnetThreshold || 0.7\n            }\n        ];\n    }\n\n    async putSetting(key: string, value: string | number): Promise<void> {\n        // Save the setting and update internal settings.\n        this.storage.setItem(key, value.toString());\n        this.settings[key] = value;\n        // In this basic example, changes require a plugin restart to take effect.\n    }\n\n    dispose() {\n        if (this.birdnetProcess) {\n            this.birdnetProcess.kill();\n            this.birdnetProcess = null;\n        }\n        \n        if (this.ffmpegAudioProcess) {\n            this.ffmpegAudioProcess.kill();\n            this.ffmpegAudioProcess = null;\n        }\n        if (this.audioStream) {\n            this.audioStream.destroy();\n            this.audioStream = null;\n        }\n    }\n\n    async getCreateDeviceSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'name',\n                title: 'Device Name',\n                type: 'string',\n            },\n            // Add other settings as needed\n        ];\n    }\n\n    async releaseDevice(id: string, nativeId: ScryptedNativeId): Promise<void> {\n        // Cleanup logic when device is removed\n    }\n\n    async initializeModel() {\n        try {\n            // Load bundled model and labels\n            const { model, labels } = await loadModelAndLabels();\n            this.model = model;\n            this.labels = labels;\n            this.console.log('BirdNET model and labels loaded successfully');\n        } catch (err) {\n            this.console.error('Failed to initialize BirdNET model:', err);\n        }\n    }\n\n    // Update analyzeAudioChunk\n    async analyzeAudioChunk(samples: Float32Array) {\n        try {\n            if (!this.model) {\n                throw new Error('Model not loaded');\n            }\n\n            // Create spectrogram\n            const spectrogram = await createSpectrogram(samples);\n            \n            // Run inference\n            const predictions = await predict(this.model, spectrogram);\n            \n            // Process results\n            const results = this.postprocessResults(predictions);\n            \n            // Log detections\n            for (const result of results) {\n                if (result.confidence >= this.settings.birdnetThreshold) {\n                    this.console.log(\n                        `BirdNET Detection: ${result.species} (${(result.confidence * 100).toFixed(1)}% confidence)`\n                    );\n                }\n            }\n\n            // Clean up\n            spectrogram.dispose();\n            \n        } catch (err) {\n            this.console.error('Audio analysis error:', err);\n        }\n    }\n\n    // Implement Web interface\n    async getResource(requestBody: string): Promise<string> {\n        if (this.settings.mode === 'external') {\n            return this.settings.birdnetUIURL;\n        }\n        return 'http://localhost:8080';\n    }\n\n    postprocessResults(predictions: any) {\n        // Implement BirdNET's post-processing\n        // Convert raw model output to species predictions\n        try {\n            // Get the label mapping from BirdNET-Analyzer\n            const labelMap = require('./labels.json');\n            \n            // Convert predictions to species confidence scores\n            const results = [];\n            for (let i = 0; i < predictions.length; i++) {\n                if (predictions[i] > this.settings.birdnetThreshold) {\n                    results.push({\n                        species: labelMap[i],\n                        confidence: predictions[i]\n                    });\n                }\n            }\n\n            // Sort by confidence\n            results.sort((a, b) => b.confidence - a.confidence);\n\n            return results;\n\n        } catch (err) {\n            this.console.error('Results post-processing error:', err);\n            throw err;\n        }\n    }\n}\n\nclass BirdNETCameraDevice extends ScryptedDeviceBase implements VideoCamera {\n    mediaManager: MediaManager;\n    x11Camera: any;\n\n    constructor(nativeId: string) {\n        super(nativeId);\n        this.mediaManager = sdk.mediaManager;\n    }\n\n    async getVideoStreamOptions(): Promise<ResponseMediaStreamOptions[]> {\n        return [{\n            id: 'default',\n            name: 'Default',\n            video: {\n                width: 1280,\n                height: 720,\n                fps: 15,\n            },\n            container: 'rtsp',\n        }];\n    }\n\n    async getVideoStream(options?: RequestMediaStreamOptions): Promise<MediaObject> {\n        // Get the x11-camera plugin instance\n        const x11Plugin = await sdk.systemManager.getDeviceByName('@scrypted/x11-camera') as unknown as DeviceCreator;\n        if (!x11Plugin) {\n            throw new Error('Please install the x11-camera plugin from the Scrypted plugin store');\n        }\n\n        // Create a new x11 camera device through the plugin\n        const deviceId = await x11Plugin.createDevice({\n            name: 'BirdNET Display',\n            type: ScryptedDeviceType.Camera,\n            nativeId: this.nativeId + '_x11',\n            interfaces: [ScryptedInterface.VideoCamera]\n        });\n\n        // Get the device instance\n        const x11Device = await sdk.systemManager.getDeviceById(deviceId) as unknown as VideoCamera;\n\n        // Get the stream from the x11 camera device\n        return x11Device.getVideoStream(options);\n    }\n}\n\n// Export the plugin instance.\nexport default BirdNETPlugin;\n  ","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"module\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}