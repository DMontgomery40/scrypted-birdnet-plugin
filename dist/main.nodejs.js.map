{"version":3,"file":"main.nodejs.js","mappings":"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","sources":["../node_modules/@scrypted/sdk/dist/src/index.js","../node_modules/@scrypted/sdk/dist/src|sync","../node_modules/@scrypted/sdk/dist/types/gen/index.js","../node_modules/fft.js/lib/fft.js","../src/birdnet-analyzer.ts","../src/main.js","../external node-commonjs \"child_process\"","../external node-commonjs \"fs\"","../external node-commonjs \"http\"","../external node-commonjs \"module\"","../external node-commonjs \"path\"","../external node-commonjs \"stream\"","../webpack/bootstrap","../webpack/runtime/hasOwnProperty shorthand","../webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdk = exports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\nconst module_1 = require(\"module\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = exports.sdk.deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = exports.sdk.deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = exports.sdk.deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        this.nativeId = exports.sdk.systemManager.getDeviceById(this.id).nativeId;\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be discouraged and warned at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && typeof this._deviceState.id === 'string') {\n            this._deviceState = exports.sdk.deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = exports.sdk.deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (exports.sdk.deviceManager.getMixinConsole)\n                this._console = exports.sdk.deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = exports.sdk.deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            if (!this._deviceState) {\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            }\n            else {\n                // @ts-ignore: accessing private property\n                this._deviceState[state] = value;\n            }\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nexports.sdk = {};\ntry {\n    let loaded = false;\n    try {\n        // todo: remove usage of process.env.SCRYPTED_SDK_MODULE, only existed in prerelease builds.\n        // import.meta is not a reliable way to detect es module support in webpack since webpack\n        // evaluates that to true at runtime.\n        const esModule = process.env.SCRYPTED_SDK_ES_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        const cjsModule = process.env.SCRYPTED_SDK_CJS_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        // @ts-expect-error\n        if (esModule && typeof import.meta !== 'undefined') {\n            // @ts-expect-error\n            const require = (0, module_1.createRequire)(import.meta.url);\n            const sdkModule = require(esModule);\n            Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n            loaded = true;\n        }\n        else if (cjsModule) {\n            // @ts-expect-error\n            if (typeof __non_webpack_require__ !== 'undefined') {\n                // @ts-expect-error\n                const sdkModule = __non_webpack_require__(process.env.SCRYPTED_SDK_MODULE);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n            else {\n                const sdkModule = require(cjsModule);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n        }\n    }\n    catch (e) {\n        console.warn(\"failed to load sdk module\", e);\n        throw e;\n    }\n    if (!loaded) {\n        let runtimeAPI;\n        try {\n            runtimeAPI = pluginRuntimeAPI;\n        }\n        catch (e) {\n        }\n        Object.assign(exports.sdk, {\n            log: deviceManager.getDeviceLogger(undefined),\n            deviceManager,\n            endpointManager,\n            mediaManager,\n            systemManager,\n            pluginHostAPI,\n            ...runtimeAPI,\n        });\n    }\n    try {\n        exports.sdk.systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = exports.sdk;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 891;\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.AirPurifierMode = exports.AirPurifierStatus = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.3.107\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"scryptedRuntimeArguments\"] = \"scryptedRuntimeArguments\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"buttons\"] = \"buttons\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"audioVolumes\"] = \"audioVolumes\";\n    ScryptedInterfaceProperty[\"recordingActive\"] = \"recordingActive\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"converters\"] = \"converters\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"sleeping\"] = \"sleeping\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"airPurifierState\"] = \"airPurifierState\";\n    ScryptedInterfaceProperty[\"filterChangeIndication\"] = \"filterChangeIndication\";\n    ScryptedInterfaceProperty[\"filterLifeLevel\"] = \"filterLifeLevel\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n    ScryptedInterfaceProperty[\"systemDevice\"] = \"systemDevice\";\n})(ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"pressButton\"] = \"pressButton\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"setAudioVolumes\"] = \"setAudioVolumes\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getPrivacyMasks\"] = \"getPrivacyMasks\";\n    ScryptedInterfaceMethod[\"setPrivacyMasks\"] = \"setPrivacyMasks\";\n    ScryptedInterfaceMethod[\"getVideoTextOverlays\"] = \"getVideoTextOverlays\";\n    ScryptedInterfaceMethod[\"setVideoTextOverlay\"] = \"setVideoTextOverlay\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"deleteRecordingStream\"] = \"deleteRecordingStream\";\n    ScryptedInterfaceMethod[\"setRecordingActive\"] = \"setRecordingActive\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"reboot\"] = \"reboot\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"convertMedia\"] = \"convertMedia\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"setAirPurifierState\"] = \"setAirPurifierState\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"forkInterface\"] = \"forkInterface\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n    ScryptedInterfaceMethod[\"connectStream\"] = \"connectStream\";\n    ScryptedInterfaceMethod[\"getTTYSettings\"] = \"getTTYSettings\";\n})(ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    \"ScryptedDevice\": {\n        \"name\": \"ScryptedDevice\",\n        \"methods\": [\n            \"listen\",\n            \"probe\",\n            \"setMixins\",\n            \"setName\",\n            \"setRoom\",\n            \"setType\"\n        ],\n        \"properties\": [\n            \"id\",\n            \"info\",\n            \"interfaces\",\n            \"mixins\",\n            \"name\",\n            \"nativeId\",\n            \"pluginId\",\n            \"providedInterfaces\",\n            \"providedName\",\n            \"providedRoom\",\n            \"providedType\",\n            \"providerId\",\n            \"room\",\n            \"type\"\n        ]\n    },\n    \"ScryptedPlugin\": {\n        \"name\": \"ScryptedPlugin\",\n        \"methods\": [\n            \"getPluginJson\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedPluginRuntime\": {\n        \"name\": \"ScryptedPluginRuntime\",\n        \"methods\": [],\n        \"properties\": [\n            \"scryptedRuntimeArguments\"\n        ]\n    },\n    \"OnOff\": {\n        \"name\": \"OnOff\",\n        \"methods\": [\n            \"turnOff\",\n            \"turnOn\"\n        ],\n        \"properties\": [\n            \"on\"\n        ]\n    },\n    \"Brightness\": {\n        \"name\": \"Brightness\",\n        \"methods\": [\n            \"setBrightness\"\n        ],\n        \"properties\": [\n            \"brightness\"\n        ]\n    },\n    \"ColorSettingTemperature\": {\n        \"name\": \"ColorSettingTemperature\",\n        \"methods\": [\n            \"getTemperatureMaxK\",\n            \"getTemperatureMinK\",\n            \"setColorTemperature\"\n        ],\n        \"properties\": [\n            \"colorTemperature\"\n        ]\n    },\n    \"ColorSettingRgb\": {\n        \"name\": \"ColorSettingRgb\",\n        \"methods\": [\n            \"setRgb\"\n        ],\n        \"properties\": [\n            \"rgb\"\n        ]\n    },\n    \"ColorSettingHsv\": {\n        \"name\": \"ColorSettingHsv\",\n        \"methods\": [\n            \"setHsv\"\n        ],\n        \"properties\": [\n            \"hsv\"\n        ]\n    },\n    \"Buttons\": {\n        \"name\": \"Buttons\",\n        \"methods\": [],\n        \"properties\": [\n            \"buttons\"\n        ]\n    },\n    \"PressButtons\": {\n        \"name\": \"PressButtons\",\n        \"methods\": [\n            \"pressButton\"\n        ],\n        \"properties\": []\n    },\n    \"Notifier\": {\n        \"name\": \"Notifier\",\n        \"methods\": [\n            \"sendNotification\"\n        ],\n        \"properties\": []\n    },\n    \"StartStop\": {\n        \"name\": \"StartStop\",\n        \"methods\": [\n            \"start\",\n            \"stop\"\n        ],\n        \"properties\": [\n            \"running\"\n        ]\n    },\n    \"Pause\": {\n        \"name\": \"Pause\",\n        \"methods\": [\n            \"pause\",\n            \"resume\"\n        ],\n        \"properties\": [\n            \"paused\"\n        ]\n    },\n    \"Dock\": {\n        \"name\": \"Dock\",\n        \"methods\": [\n            \"dock\"\n        ],\n        \"properties\": [\n            \"docked\"\n        ]\n    },\n    \"TemperatureSetting\": {\n        \"name\": \"TemperatureSetting\",\n        \"methods\": [\n            \"setTemperature\"\n        ],\n        \"properties\": [\n            \"temperatureSetting\"\n        ]\n    },\n    \"Thermometer\": {\n        \"name\": \"Thermometer\",\n        \"methods\": [\n            \"setTemperatureUnit\"\n        ],\n        \"properties\": [\n            \"temperature\",\n            \"temperatureUnit\"\n        ]\n    },\n    \"HumiditySensor\": {\n        \"name\": \"HumiditySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"humidity\"\n        ]\n    },\n    \"Camera\": {\n        \"name\": \"Camera\",\n        \"methods\": [\n            \"getPictureOptions\",\n            \"takePicture\"\n        ],\n        \"properties\": []\n    },\n    \"Microphone\": {\n        \"name\": \"Microphone\",\n        \"methods\": [\n            \"getAudioStream\"\n        ],\n        \"properties\": []\n    },\n    \"AudioVolumeControl\": {\n        \"name\": \"AudioVolumeControl\",\n        \"methods\": [\n            \"setAudioVolumes\"\n        ],\n        \"properties\": [\n            \"audioVolumes\"\n        ]\n    },\n    \"Display\": {\n        \"name\": \"Display\",\n        \"methods\": [\n            \"startDisplay\",\n            \"stopDisplay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCamera\": {\n        \"name\": \"VideoCamera\",\n        \"methods\": [\n            \"getVideoStream\",\n            \"getVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraMask\": {\n        \"name\": \"VideoCameraMask\",\n        \"methods\": [\n            \"getPrivacyMasks\",\n            \"setPrivacyMasks\"\n        ],\n        \"properties\": []\n    },\n    \"VideoTextOverlays\": {\n        \"name\": \"VideoTextOverlays\",\n        \"methods\": [\n            \"getVideoTextOverlays\",\n            \"setVideoTextOverlay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoRecorder\": {\n        \"name\": \"VideoRecorder\",\n        \"methods\": [\n            \"getRecordingStream\",\n            \"getRecordingStreamCurrentTime\",\n            \"getRecordingStreamOptions\",\n            \"getRecordingStreamThumbnail\"\n        ],\n        \"properties\": [\n            \"recordingActive\"\n        ]\n    },\n    \"VideoRecorderManagement\": {\n        \"name\": \"VideoRecorderManagement\",\n        \"methods\": [\n            \"deleteRecordingStream\",\n            \"setRecordingActive\"\n        ],\n        \"properties\": []\n    },\n    \"PanTiltZoom\": {\n        \"name\": \"PanTiltZoom\",\n        \"methods\": [\n            \"ptzCommand\"\n        ],\n        \"properties\": [\n            \"ptzCapabilities\"\n        ]\n    },\n    \"EventRecorder\": {\n        \"name\": \"EventRecorder\",\n        \"methods\": [\n            \"getRecordedEvents\"\n        ],\n        \"properties\": []\n    },\n    \"VideoClips\": {\n        \"name\": \"VideoClips\",\n        \"methods\": [\n            \"getVideoClip\",\n            \"getVideoClips\",\n            \"getVideoClipThumbnail\",\n            \"removeVideoClips\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraConfiguration\": {\n        \"name\": \"VideoCameraConfiguration\",\n        \"methods\": [\n            \"setVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"Intercom\": {\n        \"name\": \"Intercom\",\n        \"methods\": [\n            \"startIntercom\",\n            \"stopIntercom\"\n        ],\n        \"properties\": []\n    },\n    \"Lock\": {\n        \"name\": \"Lock\",\n        \"methods\": [\n            \"lock\",\n            \"unlock\"\n        ],\n        \"properties\": [\n            \"lockState\"\n        ]\n    },\n    \"PasswordStore\": {\n        \"name\": \"PasswordStore\",\n        \"methods\": [\n            \"addPassword\",\n            \"getPasswords\",\n            \"removePassword\"\n        ],\n        \"properties\": []\n    },\n    \"Scene\": {\n        \"name\": \"Scene\",\n        \"methods\": [\n            \"activate\",\n            \"deactivate\",\n            \"isReversible\"\n        ],\n        \"properties\": []\n    },\n    \"Entry\": {\n        \"name\": \"Entry\",\n        \"methods\": [\n            \"closeEntry\",\n            \"openEntry\"\n        ],\n        \"properties\": []\n    },\n    \"EntrySensor\": {\n        \"name\": \"EntrySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"entryOpen\"\n        ]\n    },\n    \"DeviceProvider\": {\n        \"name\": \"DeviceProvider\",\n        \"methods\": [\n            \"getDevice\",\n            \"releaseDevice\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceDiscovery\": {\n        \"name\": \"DeviceDiscovery\",\n        \"methods\": [\n            \"adoptDevice\",\n            \"discoverDevices\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceCreator\": {\n        \"name\": \"DeviceCreator\",\n        \"methods\": [\n            \"createDevice\",\n            \"getCreateDeviceSettings\"\n        ],\n        \"properties\": []\n    },\n    \"Battery\": {\n        \"name\": \"Battery\",\n        \"methods\": [],\n        \"properties\": [\n            \"batteryLevel\"\n        ]\n    },\n    \"Charger\": {\n        \"name\": \"Charger\",\n        \"methods\": [],\n        \"properties\": [\n            \"chargeState\"\n        ]\n    },\n    \"Reboot\": {\n        \"name\": \"Reboot\",\n        \"methods\": [\n            \"reboot\"\n        ],\n        \"properties\": []\n    },\n    \"Refresh\": {\n        \"name\": \"Refresh\",\n        \"methods\": [\n            \"getRefreshFrequency\",\n            \"refresh\"\n        ],\n        \"properties\": []\n    },\n    \"MediaPlayer\": {\n        \"name\": \"MediaPlayer\",\n        \"methods\": [\n            \"getMediaStatus\",\n            \"load\",\n            \"seek\",\n            \"skipNext\",\n            \"skipPrevious\"\n        ],\n        \"properties\": []\n    },\n    \"Online\": {\n        \"name\": \"Online\",\n        \"methods\": [],\n        \"properties\": [\n            \"online\"\n        ]\n    },\n    \"BufferConverter\": {\n        \"name\": \"BufferConverter\",\n        \"methods\": [\n            \"convert\"\n        ],\n        \"properties\": [\n            \"fromMimeType\",\n            \"toMimeType\"\n        ]\n    },\n    \"MediaConverter\": {\n        \"name\": \"MediaConverter\",\n        \"methods\": [\n            \"convertMedia\"\n        ],\n        \"properties\": [\n            \"converters\"\n        ]\n    },\n    \"Settings\": {\n        \"name\": \"Settings\",\n        \"methods\": [\n            \"getSettings\",\n            \"putSetting\"\n        ],\n        \"properties\": []\n    },\n    \"BinarySensor\": {\n        \"name\": \"BinarySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"binaryState\"\n        ]\n    },\n    \"TamperSensor\": {\n        \"name\": \"TamperSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"tampered\"\n        ]\n    },\n    \"Sleep\": {\n        \"name\": \"Sleep\",\n        \"methods\": [],\n        \"properties\": [\n            \"sleeping\"\n        ]\n    },\n    \"PowerSensor\": {\n        \"name\": \"PowerSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"powerDetected\"\n        ]\n    },\n    \"AudioSensor\": {\n        \"name\": \"AudioSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"audioDetected\"\n        ]\n    },\n    \"MotionSensor\": {\n        \"name\": \"MotionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"motionDetected\"\n        ]\n    },\n    \"AmbientLightSensor\": {\n        \"name\": \"AmbientLightSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ambientLight\"\n        ]\n    },\n    \"OccupancySensor\": {\n        \"name\": \"OccupancySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"occupied\"\n        ]\n    },\n    \"FloodSensor\": {\n        \"name\": \"FloodSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"flooded\"\n        ]\n    },\n    \"UltravioletSensor\": {\n        \"name\": \"UltravioletSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ultraviolet\"\n        ]\n    },\n    \"LuminanceSensor\": {\n        \"name\": \"LuminanceSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"luminance\"\n        ]\n    },\n    \"PositionSensor\": {\n        \"name\": \"PositionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"position\"\n        ]\n    },\n    \"SecuritySystem\": {\n        \"name\": \"SecuritySystem\",\n        \"methods\": [\n            \"armSecuritySystem\",\n            \"disarmSecuritySystem\"\n        ],\n        \"properties\": [\n            \"securitySystemState\"\n        ]\n    },\n    \"PM10Sensor\": {\n        \"name\": \"PM10Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm10Density\"\n        ]\n    },\n    \"PM25Sensor\": {\n        \"name\": \"PM25Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm25Density\"\n        ]\n    },\n    \"VOCSensor\": {\n        \"name\": \"VOCSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"vocDensity\"\n        ]\n    },\n    \"NOXSensor\": {\n        \"name\": \"NOXSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"noxDensity\"\n        ]\n    },\n    \"CO2Sensor\": {\n        \"name\": \"CO2Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"co2ppm\"\n        ]\n    },\n    \"AirQualitySensor\": {\n        \"name\": \"AirQualitySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"airQuality\"\n        ]\n    },\n    \"AirPurifier\": {\n        \"name\": \"AirPurifier\",\n        \"methods\": [\n            \"setAirPurifierState\"\n        ],\n        \"properties\": [\n            \"airPurifierState\"\n        ]\n    },\n    \"FilterMaintenance\": {\n        \"name\": \"FilterMaintenance\",\n        \"methods\": [],\n        \"properties\": [\n            \"filterChangeIndication\",\n            \"filterLifeLevel\"\n        ]\n    },\n    \"Readme\": {\n        \"name\": \"Readme\",\n        \"methods\": [\n            \"getReadmeMarkdown\"\n        ],\n        \"properties\": []\n    },\n    \"OauthClient\": {\n        \"name\": \"OauthClient\",\n        \"methods\": [\n            \"getOauthUrl\",\n            \"onOauthCallback\"\n        ],\n        \"properties\": []\n    },\n    \"MixinProvider\": {\n        \"name\": \"MixinProvider\",\n        \"methods\": [\n            \"canMixin\",\n            \"getMixin\",\n            \"releaseMixin\"\n        ],\n        \"properties\": []\n    },\n    \"HttpRequestHandler\": {\n        \"name\": \"HttpRequestHandler\",\n        \"methods\": [\n            \"onRequest\"\n        ],\n        \"properties\": []\n    },\n    \"EngineIOHandler\": {\n        \"name\": \"EngineIOHandler\",\n        \"methods\": [\n            \"onConnection\"\n        ],\n        \"properties\": []\n    },\n    \"PushHandler\": {\n        \"name\": \"PushHandler\",\n        \"methods\": [\n            \"onPush\"\n        ],\n        \"properties\": []\n    },\n    \"Program\": {\n        \"name\": \"Program\",\n        \"methods\": [\n            \"run\"\n        ],\n        \"properties\": []\n    },\n    \"Scriptable\": {\n        \"name\": \"Scriptable\",\n        \"methods\": [\n            \"eval\",\n            \"loadScripts\",\n            \"saveScript\"\n        ],\n        \"properties\": []\n    },\n    \"ClusterForkInterface\": {\n        \"name\": \"ClusterForkInterface\",\n        \"methods\": [\n            \"forkInterface\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectTracker\": {\n        \"name\": \"ObjectTracker\",\n        \"methods\": [\n            \"trackObjects\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetector\": {\n        \"name\": \"ObjectDetector\",\n        \"methods\": [\n            \"getDetectionInput\",\n            \"getObjectTypes\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetection\": {\n        \"name\": \"ObjectDetection\",\n        \"methods\": [\n            \"detectObjects\",\n            \"generateObjectDetections\",\n            \"getDetectionModel\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetectionPreview\": {\n        \"name\": \"ObjectDetectionPreview\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ObjectDetectionGenerator\": {\n        \"name\": \"ObjectDetectionGenerator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"HumiditySetting\": {\n        \"name\": \"HumiditySetting\",\n        \"methods\": [\n            \"setHumidity\"\n        ],\n        \"properties\": [\n            \"humiditySetting\"\n        ]\n    },\n    \"Fan\": {\n        \"name\": \"Fan\",\n        \"methods\": [\n            \"setFan\"\n        ],\n        \"properties\": [\n            \"fan\"\n        ]\n    },\n    \"RTCSignalingChannel\": {\n        \"name\": \"RTCSignalingChannel\",\n        \"methods\": [\n            \"startRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"RTCSignalingClient\": {\n        \"name\": \"RTCSignalingClient\",\n        \"methods\": [\n            \"createRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"LauncherApplication\": {\n        \"name\": \"LauncherApplication\",\n        \"methods\": [],\n        \"properties\": [\n            \"applicationInfo\"\n        ]\n    },\n    \"ScryptedUser\": {\n        \"name\": \"ScryptedUser\",\n        \"methods\": [\n            \"getScryptedUserAccessControl\"\n        ],\n        \"properties\": []\n    },\n    \"VideoFrameGenerator\": {\n        \"name\": \"VideoFrameGenerator\",\n        \"methods\": [\n            \"generateVideoFrames\"\n        ],\n        \"properties\": []\n    },\n    \"StreamService\": {\n        \"name\": \"StreamService\",\n        \"methods\": [\n            \"connectStream\"\n        ],\n        \"properties\": []\n    },\n    \"TTY\": {\n        \"name\": \"TTY\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"TTYSettings\": {\n        \"name\": \"TTYSettings\",\n        \"methods\": [\n            \"getTTYSettings\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedSystemDevice\": {\n        \"name\": \"ScryptedSystemDevice\",\n        \"methods\": [],\n        \"properties\": [\n            \"systemDevice\"\n        ]\n    },\n    \"ScryptedDeviceCreator\": {\n        \"name\": \"ScryptedDeviceCreator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ScryptedSettings\": {\n        \"name\": \"ScryptedSettings\",\n        \"methods\": [],\n        \"properties\": []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType || (exports.ScryptedDeviceType = ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode || (exports.HumidityMode = HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode || (exports.FanMode = FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit || (exports.TemperatureUnit = TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode || (exports.ThermostatMode = ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n    PanTiltZoomMovement[\"Continuous\"] = \"Continuous\";\n    PanTiltZoomMovement[\"Preset\"] = \"Preset\";\n    PanTiltZoomMovement[\"Home\"] = \"Home\";\n})(PanTiltZoomMovement || (exports.PanTiltZoomMovement = PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState || (exports.LockState = LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState || (exports.ChargeState = ChargeState = {}));\nvar AirPurifierStatus;\n(function (AirPurifierStatus) {\n    AirPurifierStatus[\"Inactive\"] = \"Inactive\";\n    AirPurifierStatus[\"Idle\"] = \"Idle\";\n    AirPurifierStatus[\"Active\"] = \"Active\";\n    AirPurifierStatus[\"ActiveNightMode\"] = \"ActiveNightMode\";\n})(AirPurifierStatus || (exports.AirPurifierStatus = AirPurifierStatus = {}));\nvar AirPurifierMode;\n(function (AirPurifierMode) {\n    AirPurifierMode[\"Manual\"] = \"Manual\";\n    AirPurifierMode[\"Automatic\"] = \"Automatic\";\n})(AirPurifierMode || (exports.AirPurifierMode = AirPurifierMode = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality || (exports.AirQuality = AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode || (exports.SecuritySystemMode = SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction || (exports.SecuritySystemObstruction = SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState || (exports.MediaPlayerState = MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"ScryptedPluginRuntime\"] = \"ScryptedPluginRuntime\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Buttons\"] = \"Buttons\";\n    ScryptedInterface[\"PressButtons\"] = \"PressButtons\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"AudioVolumeControl\"] = \"AudioVolumeControl\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoCameraMask\"] = \"VideoCameraMask\";\n    ScryptedInterface[\"VideoTextOverlays\"] = \"VideoTextOverlays\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"VideoRecorderManagement\"] = \"VideoRecorderManagement\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Reboot\"] = \"Reboot\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"MediaConverter\"] = \"MediaConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"Sleep\"] = \"Sleep\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedInterface[\"FilterMaintenance\"] = \"FilterMaintenance\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ClusterForkInterface\"] = \"ClusterForkInterface\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"ObjectDetectionPreview\"] = \"ObjectDetectionPreview\";\n    ScryptedInterface[\"ObjectDetectionGenerator\"] = \"ObjectDetectionGenerator\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n    ScryptedInterface[\"StreamService\"] = \"StreamService\";\n    ScryptedInterface[\"TTY\"] = \"TTY\";\n    ScryptedInterface[\"TTYSettings\"] = \"TTYSettings\";\n    ScryptedInterface[\"ScryptedSystemDevice\"] = \"ScryptedSystemDevice\";\n    ScryptedInterface[\"ScryptedDeviceCreator\"] = \"ScryptedDeviceCreator\";\n    ScryptedInterface[\"ScryptedSettings\"] = \"ScryptedSettings\";\n})(ScryptedInterface || (exports.ScryptedInterface = ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"ServerId\"] = \"text/x-server-id\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes || (exports.ScryptedMimeTypes = ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","import sdk from '@scrypted/sdk';\nimport FFT from 'fft.js';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst { systemManager } = sdk;\n\n// Instead of top-level await, we'll initialize in a function\nlet tflite: any;\n\nasync function initTFLite() {\n    if (!tflite) {\n        tflite = await systemManager.getComponent('tensorflow-lite');\n    }\n    return tflite;\n}\n\n// Constants from BirdNET-Analyzer\nconst SAMPLE_RATE = 48000;\nconst SPEC_LENGTH = 384;\nconst MEL_BANDS = 128;\nconst WINDOW_SIZE = 2048;\nconst HOP_LENGTH = 1024;\n\n// Use absolute paths from plugin root\nconst MODEL_PATH = join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/BirdNET_GLOBAL_6K_V2.4_Model_FP16.tflite');\nconst LABELS_PATH = join(process.env.SCRYPTED_PLUGIN_PATH || '', 'models/labels_en.txt');\n\nexport async function loadModelAndLabels() {\n    try {\n        // Initialize TFLite first\n        tflite = await initTFLite();\n        \n        // Read the model file\n        const modelBuffer = readFileSync(MODEL_PATH);\n        \n        // Read and parse the English labels file\n        const labelsText = readFileSync(LABELS_PATH, 'utf8');\n        const labels = labelsText.split('\\n')\n            .map(line => line.trim())\n            .filter(line => line.length > 0);\n        \n        // Load model using Scrypted's TFLite\n        const model = await tflite.loadModel(modelBuffer);\n        \n        return { model, labels };\n    } catch (err) {\n        console.error('Error loading model/labels:', err);\n        throw err;\n    }\n}\n\nexport async function createSpectrogram(samples: Float32Array) {\n    try {\n        // Create overlapping windows\n        const frames = [];\n        for (let i = 0; i < samples.length - WINDOW_SIZE; i += HOP_LENGTH) {\n            const frame = samples.slice(i, i + WINDOW_SIZE);\n            frames.push(frame);\n        }\n\n        // Apply FFT to each frame\n        const fft = new FFT(WINDOW_SIZE);\n        const spectrogramFrames = frames.map(frame => {\n            // Apply Hann window\n            const windowedFrame = frame.map((x, i) => \n                x * (0.5 - 0.5 * Math.cos(2 * Math.PI * i / (WINDOW_SIZE - 1)))\n            );\n            \n            // Compute FFT\n            const fftResult = fft.createComplexArray();\n            fft.realTransform(fftResult, windowedFrame);\n            \n            // Get magnitude\n            const magnitudes = new Float32Array(WINDOW_SIZE / 2 + 1);\n            for (let i = 0; i < magnitudes.length; i++) {\n                const real = fftResult[2 * i];\n                const imag = fftResult[2 * i + 1];\n                magnitudes[i] = Math.sqrt(real * real + imag * imag);\n            }\n            \n            return magnitudes;\n        });\n\n        // Convert to mel scale\n        const melBasis = createMelFilterbank(WINDOW_SIZE / 2 + 1, SAMPLE_RATE, MEL_BANDS);\n        const melSpectrogram = spectrogramFrames.map(frame => {\n            return applyMelFilterbank(frame, melBasis);\n        });\n\n        // Convert to dB scale and normalize\n        const spec = new Float32Array(melSpectrogram.flat());\n        const tensor = await tflite.createTensor(spec, [1, melSpectrogram.length, MEL_BANDS, 1]);\n        \n        return tensor;\n    } catch (err) {\n        console.error('Error creating spectrogram:', err);\n        throw err;\n    }\n}\n\nfunction createMelFilterbank(nFft: number, sampleRate: number, nMels: number) {\n    // Create mel scale points\n    const melMax = freqToMel(sampleRate / 2);\n    const melMin = freqToMel(0);\n    const melStep = (melMax - melMin) / (nMels + 1);\n    const melFreqs = Array.from({length: nMels + 2}, (_, i) => melMin + melStep * i);\n    const freqPoints = melFreqs.map(mel => melToFreq(mel));\n    \n    // Create filterbank matrix\n    const filterbank = new Array(nMels).fill(0).map(() => new Float32Array(nFft));\n    \n    for (let i = 0; i < nMels; i++) {\n        const f_left = freqPoints[i];\n        const f_center = freqPoints[i + 1];\n        const f_right = freqPoints[i + 2];\n        \n        for (let j = 0; j < nFft; j++) {\n            const freq = (j * sampleRate) / (2 * nFft);\n            \n            if (freq >= f_left && freq <= f_right) {\n                if (freq <= f_center) {\n                    filterbank[i][j] = (freq - f_left) / (f_center - f_left);\n                } else {\n                    filterbank[i][j] = (f_right - freq) / (f_right - f_center);\n                }\n            }\n        }\n    }\n    \n    return filterbank;\n}\n\nfunction freqToMel(freq: number): number {\n    return 2595 * Math.log10(1 + freq / 700);\n}\n\nfunction melToFreq(mel: number): number {\n    return 700 * (Math.pow(10, mel / 2595) - 1);\n}\n\nfunction applyMelFilterbank(spectrum: Float32Array, filterbank: Float32Array[]) {\n    return filterbank.map(filter => {\n        let sum = 0;\n        for (let i = 0; i < spectrum.length; i++) {\n            sum += spectrum[i] * filter[i];\n        }\n        return sum;\n    });\n}\n\nexport async function predict(model: any, spectrogram: any) {\n    try {\n        // Run inference using TFLite\n        const predictions = await model.predict(spectrogram);\n        return predictions;\n    } catch (err) {\n        console.error('Error during prediction:', err);\n        throw err;\n    }\n} ","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sdk_1 = require(\"@scrypted/sdk\");\nconst child_process_1 = require(\"child_process\");\nconst stream_1 = require(\"stream\");\nconst birdnet_analyzer_1 = require(\"./birdnet-analyzer\");\nconst http_1 = __importDefault(require(\"http\"));\nclass BirdNETPlugin extends sdk_1.ScryptedDeviceBase {\n    constructor(nativeId) {\n        super(nativeId);\n        this.devices = new Map();\n        // Process references for managing child processes\n        this.birdnetProcess = null;\n        this.audioStream = null;\n        this.ffmpegAudioProcess = null;\n        // Add model property\n        this.model = null;\n        // Plugin settings\n        this.settings = {};\n        this.mediaManager = sdk_1.sdk.mediaManager;\n        this.deviceManager = sdk_1.sdk.deviceManager;\n        this.loadSettings();\n        if (this.settings.mode === 'self-contained') {\n            this.initializeModel();\n        }\n        this.startBirdNET();\n    }\n    loadSettings() {\n        this.settings.mode = this.storage.getItem('mode') || 'self-contained';\n        this.settings.birdnetUIURL = this.storage.getItem('birdnetUIURL') || 'http://birdnet.local:8080';\n        this.settings.audioSource = this.storage.getItem('audioSource') || 'mic';\n        this.settings.rtspAudioURL = this.storage.getItem('rtspAudioURL') || '';\n        this.settings.birdnetThreshold = parseFloat(this.storage.getItem('birdnetThreshold') || '0.7');\n    }\n    async startBirdNET() {\n        try {\n            if (this.settings.mode === 'self-contained') {\n                // Initialize audio stream for self-contained mode\n                this.audioStream = new stream_1.PassThrough();\n                if (this.settings.audioSource === 'rtsp') {\n                    this.startAudioCapture();\n                }\n                try {\n                    this.console.log('Starting BirdNET-Go...');\n                    // Check if BirdNET-Go is installed\n                    try {\n                        await new Promise((resolve, reject) => {\n                            const proc = (0, child_process_1.spawn)('which', ['birdnet-go']);\n                            proc.on('exit', (code) => code === 0 ? resolve(null) : reject());\n                        });\n                    }\n                    catch (e) {\n                        throw new Error('BirdNET-Go not found. Please install BirdNET-Go first.');\n                    }\n                    // Start BirdNET-Go with appropriate flags\n                    this.birdnetProcess = (0, child_process_1.spawn)('birdnet-go', [\n                        'realtime',\n                        '--threshold', this.settings.birdnetThreshold.toString(),\n                        '--locale', 'en',\n                        ...(this.settings.audioSource === 'rtsp' ? ['--audio-stdin'] : [])\n                    ]);\n                    if (this.settings.audioSource === 'rtsp') {\n                        this.audioStream.pipe(this.birdnetProcess.stdin);\n                    }\n                    // Handle BirdNET-Go output in TTY\n                    this.birdnetProcess.stdout.on('data', (data) => {\n                        const text = data.toString();\n                        const match = text.match(/Detected\\s+(.+?)\\s+\\((0\\.\\d+)\\)/);\n                        if (match) {\n                            const [_, species, confidence] = match;\n                            const confidencePct = (parseFloat(confidence) * 100).toFixed(1);\n                            this.updateTTYDisplay([{\n                                    species,\n                                    confidence: parseFloat(confidence)\n                                }]);\n                        }\n                    });\n                }\n                catch (err) {\n                    if (err instanceof Error) {\n                        this.console.error('Failed to start BirdNET-Go:', err.message);\n                        process.stdout.write(`\\x1b[31mError: ${err.message}\\x1b[0m\\n`);\n                    }\n                    throw err;\n                }\n            }\n            else {\n                // External mode - poll the external BirdNET instance\n                this.pollExternalBirdNET();\n            }\n        }\n        catch (err) {\n            this.console.error('Error starting BirdNET:', err.message);\n            process.stdout.write(`\\x1b[31mError: ${err.message}\\x1b[0m\\n`);\n            throw err;\n        }\n    }\n    pollExternalBirdNET() {\n        const pollInterval = 1000; // Poll every second\n        setInterval(() => {\n            http_1.default.get(this.settings.birdnetUIURL, (res) => {\n                let data = '';\n                res.on('data', chunk => data += chunk);\n                res.on('end', () => {\n                    try {\n                        const detections = JSON.parse(data);\n                        if (Array.isArray(detections)) {\n                            this.updateTTYDisplay(detections);\n                        }\n                    }\n                    catch (e) {\n                        process.stdout.write(`\\x1b[31mError parsing external BirdNET data\\x1b[0m\\n`);\n                    }\n                });\n            }).on('error', (err) => {\n                process.stdout.write(`\\x1b[31mError connecting to external BirdNET: ${err.message}\\x1b[0m\\n`);\n            });\n        }, pollInterval);\n    }\n    updateTTYDisplay(detections) {\n        // Clear screen and move cursor home\n        process.stdout.write('\\x1Bc\\x1b[H');\n        // Header\n        process.stdout.write('\\x1b[1m=== BirdNET Detections ===\\x1b[0m\\n\\n');\n        // Mode indicator\n        process.stdout.write(`Mode: ${this.settings.mode}\\n`);\n        if (this.settings.mode === 'external') {\n            process.stdout.write(`Source: ${this.settings.birdnetUIURL}\\n`);\n        }\n        else {\n            process.stdout.write(`Audio: ${this.settings.audioSource}\\n`);\n        }\n        process.stdout.write('\\n');\n        // Detections\n        if (detections.length === 0) {\n            process.stdout.write('No birds detected\\n');\n        }\n        else {\n            detections.forEach(({ species, confidence }) => {\n                const confidencePct = (confidence * 100).toFixed(1);\n                process.stdout.write(`\\x1b[1m${species}\\x1b[0m (${confidencePct}%)\\n`);\n            });\n        }\n        // Footer\n        process.stdout.write('\\n\\x1b[2mPress Ctrl+C to exit\\x1b[0m\\n');\n    }\n    startAudioCapture() {\n        if (this.settings.audioSource === 'rtsp') {\n            this.ffmpegAudioProcess = (0, child_process_1.spawn)('ffmpeg', [\n                '-i', this.settings.rtspAudioURL,\n                '-vn',\n                '-acodec', 'pcm_s16le',\n                '-ar', '48000',\n                '-ac', '1',\n                '-f', 'wav',\n                'pipe:1'\n            ]);\n            this.ffmpegAudioProcess.stdout.pipe(this.audioStream);\n            this.ffmpegAudioProcess.on('error', (err) => {\n                this.console.error('FFmpeg audio capture error:', err);\n            });\n        }\n    }\n    async getDevice(nativeId) {\n        if (!this.devices.has(nativeId)) {\n            const device = new BirdNETCameraDevice(nativeId);\n            this.devices.set(nativeId, device);\n        }\n        return this.devices.get(nativeId);\n    }\n    async createDevice(device) {\n        // For a single device, we simply return the nativeId.\n        return device.nativeId;\n    }\n    async getSettings() {\n        return [\n            {\n                key: 'mode',\n                title: 'Operation Mode',\n                description: 'Select \"self-contained\" or \"external\" mode',\n                type: 'string',\n                value: this.settings.mode || 'self-contained'\n            },\n            {\n                key: 'birdnetUIURL',\n                title: 'BirdNET UI URL',\n                description: 'URL for BirdNET UI when in external mode',\n                type: 'string',\n                value: this.settings.birdnetUIURL || 'http://birdnet.local:8080'\n            },\n            {\n                key: 'audioSource',\n                title: 'Audio Source',\n                description: 'Choose \"mic\" for local microphone or \"rtsp\" for RTSP audio feed',\n                type: 'string',\n                value: this.settings.audioSource || 'mic'\n            },\n            {\n                key: 'rtspAudioURL',\n                title: 'RTSP Audio URL',\n                description: 'RTSP URL for audio capture if using RTSP audio',\n                type: 'string',\n                value: this.settings.rtspAudioURL || ''\n            },\n            {\n                key: 'birdnetThreshold',\n                title: 'BirdNET Confidence Threshold',\n                description: 'Confidence threshold for bird detection (e.g., 0.7)',\n                type: 'number',\n                value: this.settings.birdnetThreshold || 0.7\n            }\n        ];\n    }\n    async putSetting(key, value) {\n        // Save the setting and update internal settings.\n        this.storage.setItem(key, value.toString());\n        this.settings[key] = value;\n        // In this basic example, changes require a plugin restart to take effect.\n    }\n    dispose() {\n        if (this.birdnetProcess) {\n            this.birdnetProcess.kill();\n            this.birdnetProcess = null;\n        }\n        if (this.ffmpegAudioProcess) {\n            this.ffmpegAudioProcess.kill();\n            this.ffmpegAudioProcess = null;\n        }\n        if (this.audioStream) {\n            this.audioStream.destroy();\n            this.audioStream = null;\n        }\n    }\n    async getCreateDeviceSettings() {\n        return [\n            {\n                key: 'name',\n                title: 'Device Name',\n                type: 'string',\n            },\n            // Add other settings as needed\n        ];\n    }\n    async releaseDevice(id, nativeId) {\n        // Cleanup logic when device is removed\n    }\n    async initializeModel() {\n        try {\n            // Load bundled model and labels\n            const { model, labels } = await (0, birdnet_analyzer_1.loadModelAndLabels)();\n            this.model = model;\n            this.labels = labels;\n            this.console.log('BirdNET model and labels loaded successfully');\n        }\n        catch (err) {\n            this.console.error('Failed to initialize BirdNET model:', err);\n        }\n    }\n    // Update analyzeAudioChunk\n    async analyzeAudioChunk(samples) {\n        try {\n            if (!this.model) {\n                throw new Error('Model not loaded');\n            }\n            // Create spectrogram\n            const spectrogram = await (0, birdnet_analyzer_1.createSpectrogram)(samples);\n            // Run inference\n            const predictions = await (0, birdnet_analyzer_1.predict)(this.model, spectrogram);\n            // Process results\n            const results = this.postprocessResults(predictions);\n            // Log detections\n            for (const result of results) {\n                if (result.confidence >= this.settings.birdnetThreshold) {\n                    this.console.log(`BirdNET Detection: ${result.species} (${(result.confidence * 100).toFixed(1)}% confidence)`);\n                }\n            }\n            // Clean up\n            spectrogram.dispose();\n        }\n        catch (err) {\n            this.console.error('Audio analysis error:', err);\n        }\n    }\n    // Implement Web interface\n    async getResource(requestBody) {\n        if (this.settings.mode === 'external') {\n            return this.settings.birdnetUIURL;\n        }\n        return 'http://localhost:8080';\n    }\n    postprocessResults(predictions) {\n        // Implement BirdNET's post-processing\n        // Convert raw model output to species predictions\n        try {\n            // Get the label mapping from BirdNET-Analyzer\n            const labelMap = require('./labels.json');\n            // Convert predictions to species confidence scores\n            const results = [];\n            for (let i = 0; i < predictions.length; i++) {\n                if (predictions[i] > this.settings.birdnetThreshold) {\n                    results.push({\n                        species: labelMap[i],\n                        confidence: predictions[i]\n                    });\n                }\n            }\n            // Sort by confidence\n            results.sort((a, b) => b.confidence - a.confidence);\n            return results;\n        }\n        catch (err) {\n            this.console.error('Results post-processing error:', err);\n            throw err;\n        }\n    }\n}\nclass BirdNETCameraDevice extends sdk_1.ScryptedDeviceBase {\n    constructor(nativeId) {\n        super(nativeId);\n        this.mediaManager = sdk_1.sdk.mediaManager;\n    }\n    async getVideoStreamOptions() {\n        return [{\n                id: 'default',\n                name: 'Default',\n                video: {\n                    width: 1280,\n                    height: 720,\n                    fps: 15,\n                },\n                container: 'rtsp',\n            }];\n    }\n    async getVideoStream(options) {\n        // Get the x11-camera plugin instance\n        const x11Plugin = await sdk_1.sdk.systemManager.getDeviceByName('@scrypted/x11-camera');\n        if (!x11Plugin) {\n            throw new Error('Please install the x11-camera plugin from the Scrypted plugin store');\n        }\n        // Create a new x11 camera device through the plugin\n        const deviceId = await x11Plugin.createDevice({\n            name: 'BirdNET Display',\n            type: sdk_1.ScryptedDeviceType.Camera,\n            nativeId: this.nativeId + '_x11',\n            interfaces: [sdk_1.ScryptedInterface.VideoCamera]\n        });\n        // Get the device instance\n        const x11Device = await sdk_1.sdk.systemManager.getDeviceById(deviceId);\n        // Get the stream from the x11 camera device\n        return x11Device.getVideoStream(options);\n    }\n}\n// Export the plugin instance.\nexports.default = BirdNETPlugin;\n//# sourceMappingURL=main.js.map","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"module\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(803);\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","sdk","MixinDeviceBase","ScryptedDeviceBase","index_1","DeviceBase","constructor","nativeId","super","storage","_storage","deviceManager","getDeviceStorage","log","_log","getDeviceLogger","console","_console","getDeviceConsole","createMediaObject","data","mimeType","mediaManager","sourceId","id","getMediaObjectConsole","mediaObject","getMixinConsole","_lazyLoadDeviceState","_deviceState","getDeviceState","onDeviceEvent","eventInterface","eventData","options","_listeners","Set","mixinDevice","mixinDeviceInterfaces","mixinStorageSuffix","mixinDeviceState","systemManager","getDeviceById","mixinProviderNativeId","__rpcproxy_traps_all_properties","createDeviceState","setState","mixinStorageKey","getMixinStorage","onMixinEvent","manageListener","listener","add","release","l","removeListener","_createGetState","state","_createSetState","warn","field","values","ScryptedInterfaceProperty","set","loaded","process","env","SCRYPTED_SDK_ES_MODULE","SCRYPTED_SDK_MODULE","cjsModule","SCRYPTED_SDK_CJS_MODULE","sdkModule","assign","getScryptedStatic","e","runtimeAPI","pluginRuntimeAPI","endpointManager","pluginHostAPI","setScryptedInterfaceDescriptors","TYPES_VERSION","ScryptedInterfaceDescriptors","catch","error","webpackEmptyContext","req","Error","code","keys","resolve","module","ScryptedMimeTypes","ScryptedInterface","MediaPlayerState","SecuritySystemObstruction","SecuritySystemMode","AirQuality","AirPurifierMode","AirPurifierStatus","ChargeState","LockState","PanTiltZoomMovement","ThermostatMode","TemperatureUnit","FanMode","HumidityMode","ScryptedDeviceType","ScryptedInterfaceMethod","FFT","size","_csize","table","Array","i","length","angle","Math","PI","cos","sin","power","t","_width","_bitrev","j","shift","revShift","_out","_data","_inv","fromComplexArray","complex","res","createComplexArray","toComplexArray","input","completeSpectrum","spectrum","half","transform","out","_transform4","realTransform","_realTransform4","inverseTransform","outOff","step","len","bitrev","off","_singleTransform2","_singleTransform4","inv","quarterLen","limit","A","B","C","D","Ar","Ai","Br","Bi","Cr","Ci","Dr","Di","MAr","MAi","tableBr","tableBi","MBr","MBi","tableCr","tableCi","MCr","MCi","tableDr","tableDi","MDr","MDi","T0r","T0i","T1r","T1i","T2r","T2i","T3r","T3i","FAr","FAi","FCr","FCi","FBr","FBi","FDr","FDi","evenR","evenI","oddR","oddI","leftR","leftI","rightR","rightI","step2","step3","_singleRealTransform2","_singleRealTransform4","halfLen","hquarterLen","SFAr","SFAi","SFBr","SFBi","SA","SB","tflite","WINDOW_SIZE","MODEL_PATH","join","SCRYPTED_PLUGIN_PATH","LABELS_PATH","freqToMel","freq","log10","async","getComponent","initTFLite","modelBuffer","readFileSync","labels","split","map","line","trim","filter","model","loadModel","err","samples","frames","frame","slice","push","fft","spectrogramFrames","windowedFrame","x","fftResult","magnitudes","Float32Array","real","imag","sqrt","melBasis","nFft","sampleRate","nMels","melMax","melMin","melStep","freqPoints","from","_","mel","pow","melToFreq","filterbank","fill","f_left","f_center","f_right","createMelFilterbank","melSpectrogram","sum","spec","flat","createTensor","spectrogram","predict","__importDefault","mod","sdk_1","child_process_1","stream_1","birdnet_analyzer_1","http_1","BirdNETPlugin","devices","Map","birdnetProcess","audioStream","ffmpegAudioProcess","settings","loadSettings","mode","initializeModel","startBirdNET","getItem","birdnetUIURL","audioSource","rtspAudioURL","birdnetThreshold","parseFloat","PassThrough","startAudioCapture","Promise","reject","spawn","on","toString","pipe","stdin","stdout","match","species","confidence","toFixed","updateTTYDisplay","message","write","pollExternalBirdNET","setInterval","default","chunk","detections","JSON","parse","isArray","forEach","confidencePct","getDevice","has","device","BirdNETCameraDevice","createDevice","getSettings","key","title","description","type","putSetting","setItem","dispose","kill","destroy","getCreateDeviceSettings","releaseDevice","loadModelAndLabels","analyzeAudioChunk","createSpectrogram","predictions","results","postprocessResults","result","getResource","requestBody","labelMap","sort","a","b","getVideoStreamOptions","name","video","width","height","fps","container","getVideoStream","x11Plugin","getDeviceByName","deviceId","Camera","interfaces","VideoCamera","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","obj","prop","__webpack_exports__"],"sourceRoot":""}